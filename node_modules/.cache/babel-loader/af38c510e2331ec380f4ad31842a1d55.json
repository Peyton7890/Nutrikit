{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js\";\nimport React from \"react\";\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setList = foodtype => {\n      let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"];\n      let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"];\n      let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"];\n      let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"];\n      let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"];\n      let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsTotalFat = [\"13.1\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsTotalFat = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesTotalFat = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyTotalFat = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainTotalFat = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsSatFat = [\"5.3\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsSatFat = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesSatFat = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairySatFat = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainSatFat = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsTransFat = [\"0.6\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsTransFat = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesTransFat = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyTransFat = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainTransFat = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsProtein = [\"15.18\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsProtein = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesProtein = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyProtein = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainProtein = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsTotalCarb = [\"0\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsTotalCarb = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesTotalCarb = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyTotalCarb = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainTotalCarb = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      var opt;\n      var cal;\n      var totalFat;\n      var satFat;\n      var transFat;\n      var protein;\n      var totalCarb;\n\n      for (var i = 5; i >= 0; i--) {\n        this.state.myRequestedRefs.menu.remove(i);\n      }\n\n      for (i = 0; i < 5; i++) {\n        switch (foodtype) {\n          case 'Protein':\n            opt = proteins[i];\n            cal = proteinsCalories[i];\n            totalFat = proteinsTotalFat[i];\n            satFat = proteinsSatFat[i];\n            transFat = proteinsTransFat[i];\n            protein = proteinsProtein[i];\n            totalCarb = proteinsTotalCarb[i];\n            break;\n\n          case 'Fruits':\n            opt = fruits[i];\n            cal = fruitsCalories[i];\n            totalFat = fruitsTotalFat[i];\n            satFat = fruitsSatFat[i];\n            transFat = fruitsTransFat[i];\n            protein = fruitsProtein[i];\n            totalCarb = fruitsTotalCarb[i];\n            break;\n\n          case 'Vegitables':\n            opt = vegitables[i];\n            cal = vegitablesCalories[i];\n            totalFat = vegitablesTotalFat[i];\n            satFat = vegitablesSatFat[i];\n            transFat = vegitablesTransFat[i];\n            protein = vegitablesProtein[i];\n            totalCarb = vegitablesTotalCarb[i];\n            break;\n\n          case 'Dairy':\n            opt = dairy[i];\n            cal = dairyCalories[i];\n            totalFat = dairyTotalFat[i];\n            satFat = dairySatFat[i];\n            transFat = dairyTransFat[i];\n            protein = dairyProtein[i];\n            totalCarb = dairyTotalCarb[i];\n            break;\n\n          case 'Grain':\n            opt = grain[i];\n            cal = grainCalories[i];\n            totalFat = grainTotalFat[i];\n            satFat = grainSatFat[i];\n            transFat = grainTransFat[i];\n            protein = grainProtein[i];\n            totalCarb = grainTotalCarb[i];\n            break;\n\n          default:\n            break;\n        }\n\n        var el = document.createElement(\"option\");\n        el.textContent = opt;\n        el.value = cal;\n        el.totalFat = totalFat;\n        el.satFat = satFat;\n        el.transFat = transFat;\n        el.protein = protein;\n        el.totalCarb = totalCarb;\n        this.state.myRequestedRefs.menu.append(el);\n      }\n    };\n\n    this.addToSelected = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      this.setNutritional;\n      var values = this.state.myRequestedRefs.menu;\n      var select = this.state.selectedRefs.selected;\n      var el = document.createElement(\"option\");\n      var cal = this.state.selectedRefs.calories;\n      el.textContent = values.options[values.selectedIndex].text;\n      el.value = values.value;\n      select.append(el);\n      var totalCal = parseInt(cal.innerHTML);\n      var valueCal = parseInt(values.value);\n      totalCal += valueCal;\n      cal.innerHTML = totalCal;\n    };\n\n    this.removeFromSelected = () => {\n      if (this.state.selectedRefs.selected.value === \"\") {\n        return;\n      }\n\n      var select = this.state.selectedRefs.selected;\n      var cal = this.state.selectedRefs.calories;\n      var totalCal = parseInt(cal.innerHTML);\n      var valueCal = parseInt(select.value);\n      console.log(totalCal);\n      console.log(valueCal);\n      totalCal -= valueCal;\n      console.log(totalCal);\n      cal.innerHTML = totalCal;\n      select.removeChild(select.options[select.selectedIndex]);\n    };\n\n    this.setNutritional = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      var values = this.state.myRequestedRefs.menu;\n      this.state.myRequestedRefs.calories.innerHTML = values.value;\n      this.state.myRequestedRefs.totalFat.innerHTML = values.options[values.selectedIndex].totalFat;\n    };\n\n    this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n    this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n  }\n\n  getRefsFromMenu(childRefs) {\n    this.setState({\n      myRequestedRefs: childRefs\n    });\n  }\n\n  getRefsFromSelected(childRefs) {\n    this.setState({\n      selectedRefs: childRefs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        ref: \"food\",\n        setList: this.setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        ref: \"Menu\",\n        passRefUpward: this.getRefsFromMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        ref: \"button\",\n        addToSelected: this.addToSelected,\n        removeFromSelected: this.removeFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {\n        ref: \"Selected\",\n        passRefUpward: this.getRefsFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js"],"names":["React","Categories","MenuItems","SelectedItems","AddButton","App","Component","constructor","props","setList","foodtype","proteins","fruits","vegitables","dairy","grain","proteinsCalories","fruitsCalories","vegitablesCalories","dairyCalories","grainCalories","proteinsTotalFat","fruitsTotalFat","vegitablesTotalFat","dairyTotalFat","grainTotalFat","proteinsSatFat","fruitsSatFat","vegitablesSatFat","dairySatFat","grainSatFat","proteinsTransFat","fruitsTransFat","vegitablesTransFat","dairyTransFat","grainTransFat","proteinsProtein","fruitsProtein","vegitablesProtein","dairyProtein","grainProtein","proteinsTotalCarb","fruitsTotalCarb","vegitablesTotalCarb","dairyTotalCarb","grainTotalCarb","opt","cal","totalFat","satFat","transFat","protein","totalCarb","i","state","myRequestedRefs","menu","remove","el","document","createElement","textContent","value","append","addToSelected","setNutritional","values","select","selectedRefs","selected","calories","options","selectedIndex","text","totalCal","parseInt","innerHTML","valueCal","removeFromSelected","console","log","removeChild","getRefsFromMenu","bind","getRefsFromSelected","childRefs","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    setList = (foodtype) => {\n        let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n\n        let proteinsTotalFat = [\"13.1\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsTotalFat = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesTotalFat = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyTotalFat = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainTotalFat = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n\n        let proteinsSatFat = [\"5.3\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsSatFat = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesSatFat = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairySatFat = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainSatFat = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n        \n        let proteinsTransFat = [\"0.6\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsTransFat = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesTransFat = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyTransFat = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainTransFat = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n\n        let proteinsProtein = [\"15.18\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsProtein = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesProtein = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyProtein = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainProtein = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n\n        let proteinsTotalCarb = [\"0\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsTotalCarb = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesTotalCarb = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyTotalCarb = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainTotalCarb = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n        \n        var opt;\n        var cal;\n        var totalFat;\n        var satFat;\n        var transFat;\n        var protein;\n        var totalCarb;\n    \n        for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(i = 0; i < 5; i++) {\n            switch (foodtype) {\n                case 'Protein':\n                    opt = proteins[i];\n                    cal = proteinsCalories[i];\n                    totalFat = proteinsTotalFat[i];\n                    satFat = proteinsSatFat[i];\n                    transFat = proteinsTransFat[i];\n                    protein = proteinsProtein[i];\n                    totalCarb = proteinsTotalCarb[i];\n                    break;\n                case 'Fruits':\n                    opt = fruits[i];\n                    cal = fruitsCalories[i];\n                    totalFat = fruitsTotalFat[i];\n                    satFat = fruitsSatFat[i];\n                    transFat = fruitsTransFat[i];\n                    protein = fruitsProtein[i];\n                    totalCarb = fruitsTotalCarb[i];\n                    break;\n                case 'Vegitables':\n                    opt = vegitables[i];\n                    cal = vegitablesCalories[i];\n                    totalFat = vegitablesTotalFat[i];\n                    satFat = vegitablesSatFat[i];\n                    transFat = vegitablesTransFat[i];\n                    protein = vegitablesProtein[i];\n                    totalCarb = vegitablesTotalCarb[i];\n                    break;\n                case 'Dairy':\n                    opt = dairy[i];\n                    cal = dairyCalories[i];\n                    totalFat = dairyTotalFat[i];\n                    satFat = dairySatFat[i];\n                    transFat = dairyTransFat[i];\n                    protein = dairyProtein[i];\n                    totalCarb = dairyTotalCarb[i];\n                    break;\n                case 'Grain':\n                    opt = grain[i];\n                    cal = grainCalories[i];\n                    totalFat = grainTotalFat[i];\n                    satFat = grainSatFat[i];\n                    transFat = grainTransFat[i];\n                    protein = grainProtein[i];\n                    totalCarb = grainTotalCarb[i];\n                    break;\n                default:\n                    break;\n            }\n            var el = document.createElement(\"option\");\n            el.textContent = opt;\n            el.value = cal;\n            el.totalFat = totalFat;\n            el.satFat = satFat;\n            el.transFat = transFat;\n            el.protein = protein;\n            el.totalCarb = totalCarb;\n\n            \n            this.state.myRequestedRefs.menu.append(el);   \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        this.setState({\n            myRequestedRefs: childRefs\n        });\n    }\n\n    getRefsFromSelected(childRefs) {\n        this.setState({\n            selectedRefs: childRefs\n        });\n    }\n\n    addToSelected = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {\n            return;\n        }\n        this.setNutritional;\n        var values = this.state.myRequestedRefs.menu;\n        var select = this.state.selectedRefs.selected;\n        var el = document.createElement(\"option\");\n        var cal = this.state.selectedRefs.calories;\n    \n        el.textContent = values.options[values.selectedIndex].text;\n        el.value = values.value;\n        select.append(el);\n    \n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal += valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n    }\n    \n    removeFromSelected= () => {\n        if (this.state.selectedRefs.selected.value === \"\") {\n            return;\n        }\n        var select = this.state.selectedRefs.selected;\n        var cal = this.state.selectedRefs.calories;\n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(select.value);\n        console.log(totalCal);\n        console.log(valueCal);\n    \n        totalCal -= valueCal;\n    \n        console.log(totalCal);\n        cal.innerHTML = totalCal;\n    \n        select.removeChild(select.options[select.selectedIndex]);\n    }\n    setNutritional = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {\n            return;\n        }\n        var values = this.state.myRequestedRefs.menu;\n\n        this.state.myRequestedRefs.calories.innerHTML = values.value;\n        this.state.myRequestedRefs.totalFat.innerHTML = values.options[values.selectedIndex].totalFat;\n    }\n\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Categories ref=\"food\" setList={this.setList}/>\n                <MenuItems ref=\"Menu\" passRefUpward={this.getRefsFromMenu}/>\n                <AddButton ref=\"button\" addToSelected={this.addToSelected} removeFromSelected={this.removeFromSelected}/>\n                <SelectedItems ref=\"Selected\" passRefUpward={this.getRefsFromSelected}/>\n            </div>\n        );\n    }\n} \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}