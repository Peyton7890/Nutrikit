{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/mycomponent.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = apiResponse => {\n      this.setState({\n        data: apiResponse\n      });\n    };\n\n    this.fetchData = () => {\n      //In package.json add \"proxy\": \"http://localhost:5000\" \n      //This will allow redirect to REST api in Flask w/o CORS errors\n      fetch('/example_api').then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log(\"HTTP error:\" + response.status + \":\" + response.statusText);\n          return [[\"status \", response.status]];\n        }\n      }) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => //jsonOutput now has result of the data extraction\n      {\n        this.updateData(jsonOutput);\n      }).catch(error => {\n        console.log(error);\n        this.updateData(\"\");\n      });\n    };\n\n    this.state = {\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    /*If the data has not yet been loaded from the server, return empty page */\n    if (this.state.data === null || this.state.data === \"\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data returned from server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this);else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"The api response is: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this), Object.keys(this.state.data).map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.data[i].map(x => x + \";\"), \";\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/mycomponent.js"],"names":["React","Component","MyComponent","constructor","props","updateData","apiResponse","setState","data","fetchData","fetch","then","response","status","json","console","log","statusText","jsonOutput","catch","error","state","componentDidMount","render","Object","keys","map","i","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAKlBC,UALkB,GAKJC,WAAD,IAAiB;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACH,KAPiB;;AAAA,SASlBG,SATkB,GASN,MAAM;AACd;AACA;AACCC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CAEKC,QAAD,IACA;AACG,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EACA;AACG,iBAAQD,QAAQ,CAACE,IAAT,EAAR;AACF,SAHD,MAKA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBJ,QAAQ,CAACC,MAAzB,GAAkC,GAAlC,GAAyCD,QAAQ,CAACK,UAA9D;AACA,iBAAQ,CAAE,CAAC,SAAD,EAAYL,QAAQ,CAACC,MAArB,CAAF,CAAR;AACH;AACH,OAbL,EAcK;AAdL,OAeCF,IAfD,CAeQO,UAAD,IAAgB;AACd;AACI,aAAKb,UAAL,CAAgBa,UAAhB;AACH,OAlBV,EAoBAC,KApBA,CAoBOC,KAAD,IACC;AAACL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACG,aAAKf,UAAL,CAAgB,EAAhB;AACF,OAvBT;AAyBF,KArCe;;AAEd,SAAKgB,KAAL,GAAW;AAACb,MAAAA,IAAI,EAAE;AAAP,KAAX;AACH;;AAqCDc,EAAAA,iBAAiB,GAAE;AACf,SAAKb,SAAL;AACH;;AAGDc,EAAAA,MAAM,GAAE;AACJ;AACA,QAAK,KAAKF,KAAL,CAAWb,IAAX,KAAoB,IAApB,IAA4B,KAAKa,KAAL,CAAWb,IAAX,KAAoB,EAArD,EACI,oBAAQ;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAR,CADJ,KAGA;AACA,0BACI;AAAA,+BACI;AAAA,kCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,EAEIgB,MAAM,CAACC,IAAP,CAAY,KAAKJ,KAAL,CAAWb,IAAvB,EAA6BkB,GAA7B,CAAiCC,CAAC,iBAC1B;AAAA,uBACK,KAAKN,KAAL,CAAWb,IAAX,CAAgBmB,CAAhB,EAAmBD,GAAnB,CAAuBE,CAAC,IAAIA,CAAC,GAAG,GAAhC,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaC;AACJ;;AAlE8B;;AAqEnC,eAAe1B,WAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass MyComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state={data: \"\"}\n    }\n\n    updateData = (apiResponse) => {\n        this.setState({data: apiResponse})\n    }\n\n    fetchData = () => {\n        //In package.json add \"proxy\": \"http://localhost:5000\" \n        //This will allow redirect to REST api in Flask w/o CORS errors\n         fetch('/example_api')\n         .then(\n             (response) => \n             {\n                if (response.status === 200)\n                {\n                   return (response.json()) ;\n                }\n                else\n                {\n                    console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n                    return ([ [\"status \", response.status]]);\n                }\n             }\n             )//The promise response is returned, then we extract the json data\n         .then ((jsonOutput) => //jsonOutput now has result of the data extraction\n                  {\n                      this.updateData(jsonOutput);\n                  }\n              )\n        .catch((error) => \n                {console.log(error);\n                    this.updateData(\"\");\n                 } )\n    \n      }\n\n\n    componentDidMount(){\n        this.fetchData();\n    }\n\n\n    render(){\n        /*If the data has not yet been loaded from the server, return empty page */\n        if ( this.state.data === null || this.state.data === \"\")\n            return (<div><p>No data returned from server</p></div>)\n        else\n        {\n        return (\n            <div>\n                <div><h2>The api response is: </h2>\n                {\n                    Object.keys(this.state.data).map(i => \n                            <div>\n                               { this.state.data[i].map(x => x + \";\" )};\n                            </div>\n                        )\n                }\n                </div>\n            </div>\n        )\n        }\n    }\n}\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}