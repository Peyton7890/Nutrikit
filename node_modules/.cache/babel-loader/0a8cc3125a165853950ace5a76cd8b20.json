{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js\";\nimport React from \"react\";\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport { Row } from 'reactstrap';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = apiResponse => {\n      console.log(apiResponse);\n      this.setState({\n        data: apiResponse\n      });\n    };\n\n    this.fetchUpdate = (calories, totalFat, satFat, transFat, protein, carb, name) => {\n      fetch('/nutrikit_api/update', {\n        method: 'PUT',\n        body: JSON.stringify({\n          calories: calories,\n          totalFat: totalFat,\n          satFat: satFat,\n          transFat: transFat,\n          protein: protein,\n          carb: carb,\n          name: name\n        }),\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log(\"HTTP error:\" + response.status + \":\" + response.statusText);\n          return [[\"status \", response.status]];\n        }\n      }) //The promise response is returned, then we extract the json data\n      .catch(error => {\n        console.log(error);\n        this.updateData(\"\");\n      });\n      this.fetchData();\n    };\n\n    this.fetchData = () => {\n      fetch('/nutrikit_api').then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log(\"HTTP error:\" + response.status + \":\" + response.statusText);\n          return [[\"status \", response.status]];\n        }\n      }) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => {\n        //jsonOutput now has result of the data extraction\n        this.updateData(jsonOutput);\n      }).catch(error => {\n        console.log(error);\n        this.updateData(\"\");\n      });\n    };\n\n    this.setList = foodtype => {\n      var i;\n\n      for (i = 5; i >= 0; i--) {\n        this.state.myRequestedRefs.menu.remove(i);\n      }\n\n      for (i = 0; i < this.state.data.length; i++) {\n        var el = document.createElement(\"option\");\n\n        if (this.state.data[i][2] === foodtype) {\n          el.textContent = this.state.data[i][1];\n          el.category = this.state.data[i][2];\n          el.value = this.state.data[i][3];\n          el.totalFat = this.state.data[i][4];\n          el.satFat = this.state.data[i][5];\n          el.transFat = this.state.data[i][6];\n          el.protein = this.state.data[i][7];\n          el.totalCarb = this.state.data[i][8];\n          this.state.myRequestedRefs.menu.append(el);\n        }\n      }\n    };\n\n    this.addToSelected = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      this.setNutritional();\n      var values = this.state.myRequestedRefs.menu;\n      var select = this.state.selectedRefs.selected;\n      var el = document.createElement(\"option\");\n      el.textContent = values.options[values.selectedIndex].text;\n      el.value = values.value;\n      select.append(el);\n      this.Selected.current.setState({\n        calories: this.Selected.current.state.calories + parseInt(this.Menu.current.state.calories),\n        totalFat: this.Selected.current.state.totalFat + parseFloat(this.Menu.current.state.totalFat),\n        satFat: this.Selected.current.state.satFat + parseFloat(this.Menu.current.state.satFat),\n        transFat: this.Selected.current.state.transFat + parseFloat(this.Menu.current.state.transFat),\n        protein: this.Selected.current.state.protein + parseFloat(this.Menu.current.state.protein),\n        carb: this.Selected.current.state.carb + parseFloat(this.Menu.current.state.carb)\n      });\n    };\n\n    this.removeFromSelected = () => {\n      if (this.state.selectedRefs.selected.value === \"\") {\n        return;\n      }\n\n      var select = this.state.selectedRefs.selected;\n      var values = this.state.myRequestedRefs.menu;\n      this.Selected.current.setState({\n        calories: this.Selected.current.state.calories - parseInt(values.value),\n        totalFat: this.Selected.current.state.totalFat - parseFloat(values.options[values.selectedIndex].totalFat),\n        satFat: this.Selected.current.state.satFat - parseFloat(values.options[values.selectedIndex].satFat),\n        transFat: this.Selected.current.state.transFat - parseFloat(values.options[values.selectedIndex].transFat),\n        protein: this.Selected.current.state.protein - parseFloat(values.options[values.selectedIndex].protein),\n        carb: this.Selected.current.state.carb - parseFloat(values.options[values.selectedIndex].totalCarb)\n      });\n      select.removeChild(select.options[select.selectedIndex]);\n    };\n\n    this.setNutritional = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      var values = this.state.myRequestedRefs.menu;\n      this.Menu.current.setState({\n        calories: values.options[values.selectedIndex].value,\n        totalFat: values.options[values.selectedIndex].totalFat,\n        satFat: values.options[values.selectedIndex].satFat,\n        transFat: values.options[values.selectedIndex].transFat,\n        protein: values.options[values.selectedIndex].protein,\n        carb: values.options[values.selectedIndex].totalCarb\n      });\n    };\n\n    this.state = {\n      data: \"\"\n    };\n    this.Categories = /*#__PURE__*/React.createRef();\n    this.Menu = /*#__PURE__*/React.createRef();\n    this.Selected = /*#__PURE__*/React.createRef();\n    this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n    this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.fetchUpdate();\n  }\n\n  getRefsFromMenu(childRefs) {\n    this.setState({\n      myRequestedRefs: childRefs\n    });\n  }\n\n  getRefsFromSelected(childRefs) {\n    this.setState({\n      selectedRefs: childRefs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        ref: this.Categories,\n        setList: this.setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        ref: this.Menu,\n        passRefUpward: this.getRefsFromMenu,\n        setNutritional: this.setNutritional,\n        fetchUpdate: this.fetchUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        ref: \"button\",\n        addToSelected: this.addToSelected,\n        removeFromSelected: this.removeFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {\n        ref: this.Selected,\n        passRefUpward: this.getRefsFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js"],"names":["React","Categories","MenuItems","SelectedItems","AddButton","Row","App","Component","constructor","props","updateData","apiResponse","console","log","setState","data","fetchUpdate","calories","totalFat","satFat","transFat","protein","carb","name","fetch","method","body","JSON","stringify","headers","then","response","status","json","statusText","catch","error","fetchData","jsonOutput","setList","foodtype","i","state","myRequestedRefs","menu","remove","length","el","document","createElement","textContent","category","value","totalCarb","append","addToSelected","setNutritional","values","select","selectedRefs","selected","options","selectedIndex","text","Selected","current","parseInt","Menu","parseFloat","removeFromSelected","removeChild","createRef","getRefsFromMenu","bind","getRefsFromSelected","componentDidMount","childRefs","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport { Row } from 'reactstrap';\nimport './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={data: \"\"}\n\n        this.Categories = React.createRef();\n        this.Menu = React.createRef();\n        this.Selected = React.createRef();\n\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n        this.fetchUpdate();\n    }\n\n    updateData = (apiResponse) => {\n        console.log(apiResponse);\n        this.setState({data: apiResponse});\n    }\n\n    fetchUpdate = (calories, totalFat, satFat, transFat, protein, carb, name) => {\n        fetch('/nutrikit_api/update', {\n            method: 'PUT',\n            body: JSON.stringify({\n                calories: calories,\n                totalFat: totalFat,\n                satFat: satFat,\n                transFat: transFat,\n                protein: protein,\n                carb: carb,\n                name: name\n            }),\n            headers: {\n                'Content-Type': 'application/json; charset=UTF-8'\n            }\n        }).then(\n            (response) => {\n                if (response.status === 200){return (response.json()) ;}\n                else{\n                    console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n                    return ([ [\"status \", response.status]]);\n                }\n            })//The promise response is returned, then we extract the json data\n        .catch((error) => {\n            console.log(error);\n                this.updateData(\"\");\n        })\n        this.fetchData();\n    }\n\n    fetchData = () => {\n        fetch('/nutrikit_api')\n        .then(\n            (response) => {\n                if (response.status === 200){return (response.json()) ;}\n                else{\n                    console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n                    return ([ [\"status \", response.status]]);\n                }\n            })//The promise response is returned, then we extract the json data\n        .then ((jsonOutput) => {//jsonOutput now has result of the data extraction\n            this.updateData(jsonOutput);\n        })\n        .catch((error) => {\n            console.log(error);\n                this.updateData(\"\");\n        })\n    \n    }\n\n    setList = (foodtype) => {\n        var i;\n    \n        for(i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(i = 0; i < this.state.data.length; i++) {\n            var el = document.createElement(\"option\");\n            if (this.state.data[i][2] === foodtype) {\n                el.textContent = this.state.data[i][1];\n                el.category = this.state.data[i][2];\n                el.value = this.state.data[i][3];\n                el.totalFat = this.state.data[i][4];\n                el.satFat = this.state.data[i][5];\n                el.transFat = this.state.data[i][6];\n                el.protein = this.state.data[i][7];\n                el.totalCarb = this.state.data[i][8];\n                this.state.myRequestedRefs.menu.append(el); \n            } \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        this.setState({\n            myRequestedRefs: childRefs\n        });\n    }\n\n    getRefsFromSelected(childRefs) {\n        this.setState({\n            selectedRefs: childRefs\n        });\n    }\n\n    addToSelected = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {return;}\n        this.setNutritional();\n        var values = this.state.myRequestedRefs.menu;\n        var select = this.state.selectedRefs.selected;\n        var el = document.createElement(\"option\");\n    \n        el.textContent = values.options[values.selectedIndex].text;\n        el.value = values.value;\n        select.append(el);\n\n        this.Selected.current.setState({\n            calories: (this.Selected.current.state.calories + parseInt(this.Menu.current.state.calories)),\n            totalFat: (this.Selected.current.state.totalFat + parseFloat(this.Menu.current.state.totalFat)),\n            satFat: (this.Selected.current.state.satFat + parseFloat(this.Menu.current.state.satFat)),\n            transFat: (this.Selected.current.state.transFat + parseFloat(this.Menu.current.state.transFat)),\n            protein: (this.Selected.current.state.protein + parseFloat(this.Menu.current.state.protein)),\n            carb: (this.Selected.current.state.carb + parseFloat(this.Menu.current.state.carb))\n        });\n    \n    }\n    \n    removeFromSelected = () => {\n        if (this.state.selectedRefs.selected.value === \"\") {\n            return;\n        }\n        var select = this.state.selectedRefs.selected;\n        var values = this.state.myRequestedRefs.menu;\n\n        this.Selected.current.setState({\n            calories: this.Selected.current.state.calories - parseInt(values.value),\n            totalFat: this.Selected.current.state.totalFat - parseFloat(values.options[values.selectedIndex].totalFat),\n            satFat: this.Selected.current.state.satFat - parseFloat(values.options[values.selectedIndex].satFat),\n            transFat: this.Selected.current.state.transFat - parseFloat(values.options[values.selectedIndex].transFat),\n            protein: this.Selected.current.state.protein - parseFloat(values.options[values.selectedIndex].protein),\n            carb: this.Selected.current.state.carb - parseFloat(values.options[values.selectedIndex].totalCarb)\n        });\n    \n        select.removeChild(select.options[select.selectedIndex]);\n    }\n    setNutritional = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {\n            return;\n        }\n        var values = this.state.myRequestedRefs.menu;\n\n        this.Menu.current.setState({\n            calories: values.options[values.selectedIndex].value,\n            totalFat: values.options[values.selectedIndex].totalFat,\n            satFat: values.options[values.selectedIndex].satFat,\n            transFat: values.options[values.selectedIndex].transFat,\n            protein: values.options[values.selectedIndex].protein,\n            carb: values.options[values.selectedIndex].totalCarb\n        });\n    }\n\n\n    render() {\n        return (\n            <Row className=\"app\">\n                <Categories ref={this.Categories} setList={this.setList}/>\n                <MenuItems ref={this.Menu} passRefUpward={this.getRefsFromMenu} setNutritional={this.setNutritional} fetchUpdate={this.fetchUpdate}/>\n                <AddButton ref=\"button\" addToSelected={this.addToSelected} removeFromSelected={this.removeFromSelected}/>\n                <SelectedItems ref={this.Selected} passRefUpward={this.getRefsFromSelected}/>\n            </Row>\n        );\n    }\n} \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}