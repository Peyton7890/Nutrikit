{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/SelectedItems.js\";\nimport React from \"react\";\nimport { Col, Table, Button, Input } from 'reactstrap';\nimport { Progress } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectedItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: '',\n      calories: 0.0,\n      totalFat: 0.0,\n      satFat: 0.0,\n      transFat: 0.0,\n      protein: 0.0,\n      carb: 0.0,\n      calGoal: 2000\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.inputCalories = this.inputCalories.bind(this);\n    this.inputCalGoal = this.inputCalGoal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.passRefUpward(this.refs);\n  }\n\n  handleChange(e) {\n    this.setState({\n      item: e.target.textContent\n    });\n  }\n\n  calorieColor() {\n    if (this.state.calories > 100) {\n      return \"red\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  inputCalGoal(e) {\n    this.setState({\n      calGoal: parseFloat(e.target.textContent)\n    });\n    console.log(this.state.calGoal);\n  }\n\n  inputCalories(e) {\n    this.setState({\n      calories: parseFloat(e.target.textContent)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"selecteditems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selected foods\",\n        size: \"8\",\n        ref: \"selected\",\n        onClick: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calorie Goal: \", /*#__PURE__*/_jsxDEV(Input, {\n          ref: \"calories\",\n          placeholder: this.state.calGoal,\n          onChange: this.inputCalGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        value: parseFloat(this.state.calories) / parseFloat(this.state.calGoal) * 100,\n        color: \"danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"nutrition\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              ref: \"calories\",\n              style: {\n                backgroundColor: this.calorieColor()\n              },\n              placeholder: this.state.calories,\n              onChange: this.inputCalories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Total Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              ref: \"totalFat\",\n              children: this.state.totalFat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Saturated Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              ref: \"satFat\",\n              children: this.state.satFat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Trans Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              ref: \"transFat\",\n              children: this.state.transFat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Carbohydrate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.carb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SelectedItems;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/SelectedItems.js"],"names":["React","Col","Table","Button","Input","Progress","SelectedItems","Component","constructor","props","state","item","calories","totalFat","satFat","transFat","protein","carb","calGoal","handleChange","bind","inputCalories","inputCalGoal","componentDidMount","passRefUpward","refs","e","setState","target","textContent","calorieColor","parseFloat","console","log","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,YAA1C;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,QAAQ,EAAE,GAHD;AAITC,MAAAA,MAAM,EAAE,GAJC;AAKTC,MAAAA,QAAQ,EAAE,GALD;AAMTC,MAAAA,OAAO,EAAE,GANA;AAOTC,MAAAA,IAAI,EAAE,GAPG;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,KAAL,CAAWe,aAAX,CAAyB,KAAKC,IAA9B;AACH;;AACDN,EAAAA,YAAY,CAACO,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,IAAI,EAAEe,CAAC,CAACE,MAAF,CAASC;AAAjB,KAAd;AACH;;AACDC,EAAAA,YAAY,GAAG;AACZ,QAAI,KAAKpB,KAAL,CAAWE,QAAX,GAAsB,GAA1B,EAA+B;AAC1B,aAAO,KAAP;AACH,KAFF,MAEQ;AACH,aAAO,MAAP;AACH;AACJ;;AACDU,EAAAA,YAAY,CAACI,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAEa,UAAU,CAACL,CAAC,CAACE,MAAF,CAASC,WAAV;AAArB,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWQ,OAAvB;AACH;;AACDG,EAAAA,aAAa,CAACK,CAAD,EAAI;AACb,SAAKC,QAAL,CAAc;AAAEf,MAAAA,QAAQ,EAAEmB,UAAU,CAACL,CAAC,CAACE,MAAF,CAASC,WAAV;AAAtB,KAAd;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,EAAE,EAAC,gBAAX;AAA4B,QAAA,IAAI,EAAC,GAAjC;AAAqC,QAAA,GAAG,EAAC,UAAzC;AAAoD,QAAA,OAAO,EAAE,KAAKf;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kDAAkB,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,UAAX;AAAsB,UAAA,WAAW,EAAE,KAAKT,KAAL,CAAWQ,OAA9C;AAAuD,UAAA,QAAQ,EAAE,KAAKI;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAU,QAAA,KAAK,EAAGS,UAAU,CAAC,KAAKrB,KAAL,CAAWE,QAAZ,CAAV,GAAkCmB,UAAU,CAAC,KAAKrB,KAAL,CAAWQ,OAAZ,CAA7C,GAAqE,GAAtF;AAA2F,QAAA,KAAK,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,+BACI;AAAA,kCACA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,UAAX;AAAsB,cAAA,KAAK,EAAE;AAACiB,gBAAAA,eAAe,EAAE,KAAKL,YAAL;AAAlB,eAA7B;AAAsE,cAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWE,QAA9F;AAAwG,cAAA,QAAQ,EAAE,KAAKS;AAAvH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,GAAG,EAAC,UAAR;AAAA,wBAAoB,KAAKX,KAAL,CAAWG;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eASA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,GAAG,EAAC,QAAR;AAAA,wBAAkB,KAAKH,KAAL,CAAWI;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,eAaA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,GAAG,EAAC,UAAR;AAAA,wBAAoB,KAAKJ,KAAL,CAAWK;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbA,eAiBA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAK,KAAKL,KAAL,CAAWM;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBA,eAqBA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAK,KAAKN,KAAL,CAAWO;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AA3EuC;;AA8E5C,eAAeX,aAAf","sourcesContent":["import React from \"react\";\nimport { Col, Table, Button, Input } from 'reactstrap';\nimport { Progress } from \"reactstrap\";\n\nclass SelectedItems extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            item: '' , \n            calories: 0.0,\n            totalFat: 0.0,\n            satFat: 0.0,\n            transFat: 0.0,\n            protein: 0.0,\n            carb: 0.0,\n            calGoal: 2000\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.inputCalories = this.inputCalories.bind(this);\n        this.inputCalGoal = this.inputCalGoal.bind(this);\n    }\n    componentDidMount() {\n        this.props.passRefUpward(this.refs);\n    }\n    handleChange(e) {\n        this.setState({ item: e.target.textContent });\n    }\n    calorieColor() {\n       if (this.state.calories > 100) {\n            return \"red\";\n        } else {\n            return \"cyan\";\n        }\n    }\n    inputCalGoal(e) {\n        this.setState({ calGoal: parseFloat(e.target.textContent) });\n        console.log(this.state.calGoal);\n    }\n    inputCalories(e) {\n        this.setState({ calories: parseFloat(e.target.textContent) });\n    }\n\n    render() {\n        return (\n            <Col className=\"selecteditems\">\n                <h2>Selected Items</h2>\n                <select id=\"selected foods\" size=\"8\" ref=\"selected\" onClick={this.handleChange}></select> \n                <h3>Calorie Goal: <Input ref=\"calories\" placeholder={this.state.calGoal} onChange={this.inputCalGoal}></Input></h3>\n                <Progress value={(parseFloat(this.state.calories) / parseFloat(this.state.calGoal)) * 100} color=\"danger\"/>\n                <Table className=\"nutrition\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Calories</th>\n                        <Input ref=\"calories\" style={{backgroundColor: this.calorieColor(),}} placeholder={this.state.calories} onChange={this.inputCalories}></Input>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Total Fat</th>\n                        <td ref=\"totalFat\">{this.state.totalFat}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Saturated Fat</th>\n                        <td ref=\"satFat\">{this.state.satFat}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Trans Fat</th>\n                        <td ref=\"transFat\">{this.state.transFat}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Protein</th>\n                        <td>{this.state.protein}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Carbohydrate</th>\n                        <td>{this.state.carb}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Col>\n        );\n    }\n}\n\nexport default SelectedItems;"]},"metadata":{},"sourceType":"module"}