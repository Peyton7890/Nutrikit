{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/MenuItems.js\";\nimport React from \"react\";\nimport { Col, Table, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MenuItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fooditem: '',\n      category: '',\n      calories: 0.0,\n      totalFat: 0.0,\n      satFat: 0.0,\n      transFat: 0.0,\n      protein: 0.0,\n      carb: 0.0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.inputCalories = this.inputCalories.bind(this);\n    this.inputCarb = this.inputCarb.bind(this);\n    this.inputProtein = this.inputProtein.bind(this);\n    this.inputSatFat = this.inputSatFat.bind(this);\n    this.inputTotalFat = this.inputTotalFat.bind(this);\n    this.inputTransFat = this.inputTransFat.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.passRefUpward(this.refs);\n  }\n\n  handleChange(e) {\n    this.setState({\n      fooditem: e.target.textContent\n    });\n    this.props.setNutritional();\n  }\n\n  calorieColor() {\n    if (this.state.calories > 2000) {\n      return \"red\";\n    } else if (this.state.calories > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  totalFatColor() {\n    if (this.state.totalFat > 9) {\n      return \"red\";\n    } else if (this.state.totalFat > 7) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  satFatColor() {\n    if (this.state.satFat > 20) {\n      return \"red\";\n    } else if (this.state.satFat > 17) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  transFatColor() {\n    if (this.state.transFat > 30) {\n      return \"red\";\n    } else if (this.state.transFat > 25) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  proteinColor() {\n    if (this.state.protein > 2000) {\n      return \"red\";\n    } else if (this.state.protein > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  carbColor() {\n    if (this.state.carb > 2000) {\n      return \"red\";\n    } else if (this.state.carb > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  inputCalories(e) {\n    this.setState({\n      calories: e.target.value\n    });\n    this.props.fetchUpdate(e.target.value, this.state.totalFat, this.state.satFat, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n    this.props.setList(this.state.category);\n  }\n\n  inputTotalFat(e) {\n    this.setState({\n      totalFat: e.target.value\n    });\n    this.props.fetchUpdate(this.state.calories, e.target.value, this.state.satFat, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n  }\n\n  inputSatFat(e) {\n    this.setState({\n      satFat: e.target.value\n    });\n    this.props.fetchUpdate(this.state.calories, this.state.totalFat, e.target.value, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n  }\n\n  inputTransFat(e) {\n    this.setState({\n      transFat: e.target.value\n    });\n    this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, e.target.value, this.state.protein, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n  }\n\n  inputProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n    this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, this.state.transFat, e.target.value, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n  }\n\n  inputCarb(e) {\n    this.setState({\n      carb: e.target.value\n    });\n    this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, this.state.transFat, e.target.value, this.state.carb, this.state.fooditem);\n    this.props.setNutritional();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"menuitems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"food list\",\n        ref: \"menu\",\n        size: \"5\",\n        onClick: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nutritional Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"nutrition\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.calorieColor()\n                },\n                placeholder: this.state.calories,\n                onChange: this.inputCalories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Total Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.totalFatColor()\n                },\n                placeholder: this.state.totalFat,\n                onChange: this.inputTotalFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Saturated Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.satFatColor()\n                },\n                placeholder: this.state.satFat,\n                onChange: this.inputSatFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Trans Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.transFatColor()\n                },\n                placeholder: this.state.transFat,\n                onChange: this.inputTransFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.proteinColor()\n                },\n                placeholder: this.state.protein,\n                onChange: this.inputProtein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Carbohydrate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.carbColor()\n                },\n                placeholder: this.state.carb,\n                onChange: this.inputCarb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MenuItems;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/MenuItems.js"],"names":["React","Col","Table","Input","MenuItems","Component","constructor","props","state","fooditem","category","calories","totalFat","satFat","transFat","protein","carb","handleChange","bind","inputCalories","inputCarb","inputProtein","inputSatFat","inputTotalFat","inputTransFat","componentDidMount","passRefUpward","refs","e","setState","target","textContent","setNutritional","calorieColor","totalFatColor","satFatColor","transFatColor","proteinColor","carbColor","value","fetchUpdate","setList","render","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Col, Table, Input } from 'reactstrap';\n\nclass MenuItems extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            fooditem: '',\n            category: '',\n            calories: 0.0,\n            totalFat: 0.0,\n            satFat: 0.0,\n            transFat: 0.0,\n            protein: 0.0,\n            carb: 0.0,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.inputCalories = this.inputCalories.bind(this);\n        this.inputCarb = this.inputCarb.bind(this);\n        this.inputProtein = this.inputProtein.bind(this);\n        this.inputSatFat = this.inputSatFat.bind(this);\n        this.inputTotalFat = this.inputTotalFat.bind(this);\n        this.inputTransFat = this.inputTransFat.bind(this);\n    }\n    componentDidMount() {\n        this.props.passRefUpward(this.refs);\n    }\n    handleChange(e) {\n        this.setState({ fooditem: e.target.textContent });\n        this.props.setNutritional();\n    }\n\n    calorieColor() {\n        if (this.state.calories > 2000) {return \"red\";}\n        else if(this.state.calories > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    totalFatColor() {\n        if (this.state.totalFat > 9) {return \"red\";}\n        else if(this.state.totalFat > 7) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    satFatColor() {\n        if (this.state.satFat > 20) {return \"red\";}\n        else if(this.state.satFat > 17) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    transFatColor() {\n        if (this.state.transFat > 30) {return \"red\";}\n        else if(this.state.transFat > 25) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    proteinColor() {\n        if (this.state.protein > 2000) {return \"red\";}\n        else if(this.state.protein > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    carbColor() {\n        if (this.state.carb > 2000) {return \"red\";}\n        else if(this.state.carb > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n\n    inputCalories(e) {\n        this.setState({ calories: e.target.value });\n        this.props.fetchUpdate(e.target.value, this.state.totalFat, this.state.satFat, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n        this.props.setList(this.state.category);\n    }\n    inputTotalFat(e) {\n        this.setState({ totalFat: e.target.value });\n        this.props.fetchUpdate(this.state.calories, e.target.value, this.state.satFat, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n    }\n    inputSatFat(e) {\n        this.setState({ satFat: e.target.value });\n        this.props.fetchUpdate(this.state.calories, this.state.totalFat, e.target.value, this.state.transFat, this.state.protein, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n    }\n    inputTransFat(e) {\n        this.setState({ transFat: e.target.value });\n        this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, e.target.value, this.state.protein, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n    }\n    inputProtein(e) {\n        this.setState({ protein: e.target.value });\n        this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, this.state.transFat, e.target.value, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n    }\n    inputCarb(e) {\n        this.setState({ carb: e.target.value });\n        this.props.fetchUpdate(this.state.calories, this.state.totalFat, this.state.satFat, this.state.transFat, e.target.value, this.state.carb, this.state.fooditem);\n        this.props.setNutritional();\n    }\n\n    render() {\n        return (\n            <Col className=\"menuitems\">\n                <h2>Menu Items</h2>\n                <select id=\"food list\" ref=\"menu\"size=\"5\" onClick={this.handleChange}></select>\n                <h3>Nutritional Info</h3>\n                <Table className=\"nutrition\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Calories</th>\n                        <td><Input style={{backgroundColor: this.calorieColor(),}} placeholder={this.state.calories} onChange={this.inputCalories}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Total Fat</th>\n                        <td><Input style={{backgroundColor: this.totalFatColor(),}} placeholder={this.state.totalFat} onChange={this.inputTotalFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Saturated Fat</th>\n                        <td><Input style={{backgroundColor: this.satFatColor(),}} placeholder={this.state.satFat} onChange={this.inputSatFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Trans Fat</th>\n                        <td><Input style={{backgroundColor: this.transFatColor(),}} placeholder={this.state.transFat} onChange={this.inputTransFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Protein</th>\n                        <td><Input style={{backgroundColor: this.proteinColor(),}} placeholder={this.state.protein} onChange={this.inputProtein}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Carbohydrate</th>\n                        <td><Input style={{backgroundColor: this.carbColor(),}} placeholder={this.state.carb} onChange={this.inputCarb}></Input></td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Col>\n        );\n    }\n}\n\nexport default MenuItems;\n"]},"metadata":{},"sourceType":"module"}