{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/AddButton.js\";\nimport React from \"react\";\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setList = foodtype => {\n      let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"];\n      let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"];\n      let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"];\n      let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"];\n      let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"];\n      let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      var opt;\n      var cal;\n\n      for (var i = 5; i >= 0; i--) {\n        this.state.myRequestedRefs.menu.remove(i);\n      }\n\n      for (i = 0; i < 5; i++) {\n        switch (foodtype) {\n          case 'Protein':\n            opt = proteins[i];\n            cal = proteinsCalories[i];\n            break;\n\n          case 'Fruits':\n            opt = fruits[i];\n            cal = fruitsCalories[i];\n            break;\n\n          case 'Vegitables':\n            opt = vegitables[i];\n            cal = vegitablesCalories[i];\n            break;\n\n          case 'Dairy':\n            opt = dairy[i];\n            cal = dairyCalories[i];\n            break;\n\n          case 'Grain':\n            opt = grain[i];\n            cal = grainCalories[i];\n            break;\n\n          default:\n            break;\n        }\n\n        var el = document.createElement(\"option\");\n        el.textContent = opt;\n        el.value = cal;\n        this.state.myRequestedRefs.menu.append(el);\n      }\n    };\n\n    this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n    this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n  }\n\n  getRefsFromMenu(childRefs) {\n    this.setState({\n      myRequestedRefs: childRefs\n    });\n  }\n\n  getRefsFromSelected(childRefs) {\n    this.setState({\n      selectedRefs: childRefs\n    });\n  }\n\n  addToSelected(values) {\n    var select = this.state.selectedRefs.selected; // var el = document.createElement(\"option\");\n\n    var cal = this.state.selectedRefs.calories; // el.textContent = values.options[values.selectedIndex].text;\n    // el.value = values.value;\n    // select.appendChild(el);\n\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(values.value);\n    totalCal += valueCal;\n    cal.innerHTML = totalCal;\n  }\n\n  removeFromSelected(values) {\n    var select = this.state.selectedRefs.selected;\n    var cal = this.state.selectedRefs.calories;\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(values.value);\n    totalCal -= valueCal;\n    cal.innerHTML = totalCal;\n    select.remove(values.options[values.selectedIndex]);\n  }\n\n  handleclick() {\n    console.log(\"button clicked\"); // console.log(this.state.selectedRefs.calories.textContent);\n    // if (this.state.selectedRefs.selected.value !== \"\") {\n    //     this.removeFromSelected(this.state.selectedRefs.selected);\n    // }else \n    // if (this.state.myRequestedRefs.menu.value !== \"\") {\n    //     this.addToSelected(this.state.myRequestedRefs.menu);\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addbutton\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        ref: \"food\",\n        setList: this.setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        ref: \"Menu\",\n        passRefUpward: this.getRefsFromMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \">>\",\n        id: \"add button\",\n        onClick: () => this.handleclick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {\n        ref: \"Selected\",\n        passRefUpward: this.getRefsFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddButton;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/AddButton.js"],"names":["React","Categories","MenuItems","SelectedItems","AddButton","Component","constructor","props","setList","foodtype","proteins","fruits","vegitables","dairy","grain","proteinsCalories","fruitsCalories","vegitablesCalories","dairyCalories","grainCalories","opt","cal","i","state","myRequestedRefs","menu","remove","el","document","createElement","textContent","value","append","getRefsFromMenu","bind","getRefsFromSelected","childRefs","setState","selectedRefs","addToSelected","values","select","selected","calories","totalCal","parseInt","innerHTML","valueCal","removeFromSelected","options","selectedIndex","handleclick","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport './index.css';\n\nclass AddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    setList = (foodtype) => {\n        let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n        \n        var opt;\n        var cal;\n    \n        for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(i = 0; i < 5; i++) {\n            switch (foodtype) {\n                case 'Protein':\n                    opt = proteins[i];\n                    cal = proteinsCalories[i];\n                    break;\n                case 'Fruits':\n                    opt = fruits[i];\n                    cal = fruitsCalories[i];\n                    break;\n                case 'Vegitables':\n                    opt = vegitables[i];\n                    cal = vegitablesCalories[i];\n                    break;\n                case 'Dairy':\n                    opt = dairy[i];\n                    cal = dairyCalories[i];\n                    break;\n                case 'Grain':\n                    opt = grain[i];\n                    cal = grainCalories[i];\n                    break;\n                default:\n                    break;\n            }\n            var el = document.createElement(\"option\");\n            el.textContent = opt;\n            el.value = cal;\n            \n            this.state.myRequestedRefs.menu.append(el);   \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        this.setState({\n            myRequestedRefs: childRefs\n        });\n    }\n\n    getRefsFromSelected(childRefs) {\n        this.setState({\n            selectedRefs: childRefs\n        });\n    }\n\n    addToSelected(values) {\n\n        var select = this.state.selectedRefs.selected;\n        // var el = document.createElement(\"option\");\n        var cal = this.state.selectedRefs.calories;\n    \n        // el.textContent = values.options[values.selectedIndex].text;\n        // el.value = values.value;\n        // select.appendChild(el);\n    \n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal += valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n    }\n    \n    removeFromSelected(values) {\n        var select = this.state.selectedRefs.selected;\n        var cal = this.state.selectedRefs.calories;\n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal -= valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n        select.remove(values.options[values.selectedIndex]);\n    }\n\n    handleclick() {\n        console.log(\"button clicked\");\n        // console.log(this.state.selectedRefs.calories.textContent);\n        // if (this.state.selectedRefs.selected.value !== \"\") {\n        //     this.removeFromSelected(this.state.selectedRefs.selected);\n        // }else \n        // if (this.state.myRequestedRefs.menu.value !== \"\") {\n        //     this.addToSelected(this.state.myRequestedRefs.menu);\n        // }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"addbutton\">\n                <Categories ref=\"food\" setList={this.setList}/>\n                <MenuItems ref=\"Menu\" passRefUpward={this.getRefsFromMenu}/>\n                <input type=\"button\" value = \">>\" id=\"add button\" onClick={() => this.handleclick()}/>\n                <SelectedItems ref=\"Selected\" passRefUpward={this.getRefsFromSelected}/>\n            </div>\n        );\n    }\n} \nexport default AddButton;\n\n"]},"metadata":{},"sourceType":"module"}