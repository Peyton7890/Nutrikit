{"ast":null,"code":"import _classCallCheck from\"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactDOM from'react-dom';import Headings from'./Headings';import Categories from\"./Categories\";import MenuItems from\"./MenuItems\";import SelectedItems from\"./SelectedItems\";import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddButton=/*#__PURE__*/function(_React$Component){_inherits(AddButton,_React$Component);var _super=_createSuper(AddButton);function AddButton(props){var _this;_classCallCheck(this,AddButton);_this=_super.call(this,props);_this.setList=function(foodtype){var proteins=[\"steak\",\"ground beef\",\"chicken\",\"fish\",\"soy\"];var fruits=[\"orange\",\"banana\",\"pineapple\",\"grapes\",\"blueberries\"];var vegitables=[\"romaine\",\"green beans\",\"squach\",\"spinach\",\"kale\"];var dairy=[\"milk\",\"yogurt\",\"cheddar cheese\",\"skim milk\",\"cottage cheese\"];var grain=[\"bread\",\"bagel\",\"pita\",\"naan\",\"tortilla\"];var proteinsCalories=[\"300\",\"200\",\"100\",\"80\",\"50\"];var fruitsCalories=[\"300\",\"200\",\"100\",\"80\",\"50\"];var vegitablesCalories=[\"30\",\"40\",\"100\",\"50\",\"10\"];var dairyCalories=[\"300\",\"200\",\"200\",\"100\",\"80\"];var grainCalories=[\"200\",\"300\",\"250\",\"210\",\"120\"];// for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\nfor(var i=0;i<5;i++){switch(foodtype){case'Protein':var opt=proteins[i];var cal=proteinsCalories[i];break;case'Fruits':var opt=fruits[i];var cal=fruitsCalories[i];break;case'Vegitables':var opt=vegitables[i];var cal=vegitablesCalories[i];break;case'Dairy':var opt=dairy[i];var cal=dairyCalories[i];break;case'Grain':var opt=grain[i];var cal=grainCalories[i];break;default:break;}// var el = document.createElement(\"option\");\n// el.textContent = opt;\n// el.value = cal;\n// this.state.myRequestedRefs.menu.append(el);   \n}};_this.getRefsFromMenu=_this.getRefsFromMenu.bind(_assertThisInitialized(_this));_this.getRefsFromSelected=_this.getRefsFromSelected.bind(_assertThisInitialized(_this));return _this;}_createClass(AddButton,[{key:\"getRefsFromMenu\",value:function getRefsFromMenu(childRefs){// this.setState({\n//     myRequestedRefs: childRefs\n// });\n}},{key:\"getRefsFromSelected\",value:function getRefsFromSelected(childRefs){// this.setState({\n//     selectedRefs: childRefs\n// });\n}},{key:\"addToSelected\",value:function addToSelected(values){// var select = this.state.selectedRefs.selected;\n// // var el = document.createElement(\"option\");\n// var cal = this.state.selectedRefs.calories;\n// // el.textContent = values.options[values.selectedIndex].text;\n// // el.value = values.value;\n// // select.appendChild(el);\n// var totalCal = parseInt(cal.innerHTML);\n// var valueCal = parseInt(values.value);\n// totalCal += valueCal;\n// cal.innerHTML = totalCal;\n}},{key:\"removeFromSelected\",value:function removeFromSelected(values){// var select = this.state.selectedRefs.selected;\n// var cal = this.state.selectedRefs.calories;\n// var totalCal = parseInt(cal.innerHTML);\n// var valueCal = parseInt(values.value);\n// totalCal -= valueCal;\n// cal.innerHTML = totalCal;\n// select.remove(values.options[values.selectedIndex]);\n}},{key:\"handleclick\",value:function handleclick(){console.log(\"button clicked\");// console.log(this.state.selectedRefs.calories.textContent);\n// if (this.state.selectedRefs.selected.value !== \"\") {\n//     this.removeFromSelected(this.state.selectedRefs.selected);\n// }else \n// if (this.state.myRequestedRefs.menu.value !== \"\") {\n//     this.addToSelected(this.state.myRequestedRefs.menu);\n// }\n}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"addbutton\",children:[/*#__PURE__*/_jsx(Categories,{ref:\"food\",setList:this.setList}),/*#__PURE__*/_jsx(MenuItems,{ref:\"Menu\",passRefUpward:this.getRefsFromMenu}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\">>\",id:\"add button\",onClick:function onClick(){return _this2.handleclick();}}),/*#__PURE__*/_jsx(SelectedItems,{ref:\"Selected\",passRefUpward:this.getRefsFromSelected})]});}}]);return AddButton;}(React.Component);export default AddButton;ReactDOM.render(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Headings,{}),/*#__PURE__*/_jsx(\"div\",{class:\"flex\",children:/*#__PURE__*/_jsx(\"div\",{class:\"button\",children:/*#__PURE__*/_jsx(AddButton,{})})})]}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/AddButton.js"],"names":["React","ReactDOM","Headings","Categories","MenuItems","SelectedItems","AddButton","props","setList","foodtype","proteins","fruits","vegitables","dairy","grain","proteinsCalories","fruitsCalories","vegitablesCalories","dairyCalories","grainCalories","i","opt","cal","getRefsFromMenu","bind","getRefsFromSelected","childRefs","values","console","log","handleclick","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactDOM from 'react-dom';\nimport Headings from './Headings';\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport './index.css';\n\nclass AddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    setList = (foodtype) => {\n        let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n    \n        // for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(var i = 0; i < 5; i++) {\n            switch (foodtype) {\n                case 'Protein':\n                    var opt = proteins[i];\n                    var cal = proteinsCalories[i];\n                    break;\n                case 'Fruits':\n                    var opt = fruits[i];\n                    var cal = fruitsCalories[i];\n                    break;\n                case 'Vegitables':\n                    var opt = vegitables[i];\n                    var cal = vegitablesCalories[i];\n                    break;\n                case 'Dairy':\n                    var opt = dairy[i];\n                    var cal = dairyCalories[i];\n                    break;\n                case 'Grain':\n                    var opt = grain[i];\n                    var cal = grainCalories[i];\n                    break;\n                default:\n                    break;\n            }\n            // var el = document.createElement(\"option\");\n            // el.textContent = opt;\n            // el.value = cal;\n            \n            // this.state.myRequestedRefs.menu.append(el);   \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        // this.setState({\n        //     myRequestedRefs: childRefs\n        // });\n    }\n\n    getRefsFromSelected(childRefs) {\n        // this.setState({\n        //     selectedRefs: childRefs\n        // });\n    }\n\n    addToSelected(values) {\n\n        // var select = this.state.selectedRefs.selected;\n        // // var el = document.createElement(\"option\");\n        // var cal = this.state.selectedRefs.calories;\n    \n        // // el.textContent = values.options[values.selectedIndex].text;\n        // // el.value = values.value;\n        // // select.appendChild(el);\n    \n    \n        // var totalCal = parseInt(cal.innerHTML);\n        // var valueCal = parseInt(values.value);\n    \n        // totalCal += valueCal;\n    \n        // cal.innerHTML = totalCal;\n    \n    }\n    \n    removeFromSelected(values) {\n        // var select = this.state.selectedRefs.selected;\n        // var cal = this.state.selectedRefs.calories;\n    \n        // var totalCal = parseInt(cal.innerHTML);\n        // var valueCal = parseInt(values.value);\n    \n        // totalCal -= valueCal;\n    \n        // cal.innerHTML = totalCal;\n    \n        // select.remove(values.options[values.selectedIndex]);\n    }\n\n    handleclick() {\n        console.log(\"button clicked\");\n        // console.log(this.state.selectedRefs.calories.textContent);\n        // if (this.state.selectedRefs.selected.value !== \"\") {\n        //     this.removeFromSelected(this.state.selectedRefs.selected);\n        // }else \n        // if (this.state.myRequestedRefs.menu.value !== \"\") {\n        //     this.addToSelected(this.state.myRequestedRefs.menu);\n        // }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"addbutton\">\n                <Categories ref=\"food\" setList={this.setList}/>\n                <MenuItems ref=\"Menu\" passRefUpward={this.getRefsFromMenu}/>\n                <input type=\"button\" value = \">>\" id=\"add button\" onClick={() => this.handleclick()}/>\n                <SelectedItems ref=\"Selected\" passRefUpward={this.getRefsFromSelected}/>\n            </div>\n        );\n    }\n} \nexport default AddButton;\n\nReactDOM.render(\n    <div>\n      <Headings/>\n      <div class=\"flex\">\n        <div class=\"button\"><AddButton /></div>\n      </div>\n    </div>,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}