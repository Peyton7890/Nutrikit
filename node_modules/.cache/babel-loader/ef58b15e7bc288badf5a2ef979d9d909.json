{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/MenuItems.js\";\nimport React from \"react\";\nimport { Col, Table, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MenuItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = apiResponse => {\n      this.setState({\n        data: apiResponse\n      });\n      console.log(this.state.data);\n    };\n\n    this.fetchData = () => {\n      //In package.json add \"proxy\": \"http://localhost:5000\" \n      //This will allow redirect to REST api in Flask w/o CORS errors\n      fetch('/example_api').then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log(\"HTTP error:\" + response.status + \":\" + response.statusText);\n          return [[\"status \", response.status]];\n        }\n      }) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => //jsonOutput now has result of the data extraction\n      {\n        this.updateData(jsonOutput);\n      }).catch(error => {\n        console.log(error);\n        this.updateData(\"\");\n      });\n    };\n\n    this.state = {\n      fooditem: '',\n      calories: 0.0,\n      totalFat: 0.0,\n      satFat: 0.0,\n      transFat: 0.0,\n      protein: 0.0,\n      carb: 0.0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.inputCalories = this.inputCalories.bind(this);\n    this.inputCarb = this.inputCarb.bind(this);\n    this.inputProtein = this.inputProtein.bind(this);\n    this.inputSatFat = this.inputSatFat.bind(this);\n    this.inputTotalFat = this.inputTotalFat.bind(this);\n    this.inputTransFat = this.inputTransFat.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.props.passRefUpward(this.refs);\n  }\n\n  handleChange(e) {\n    this.setState({\n      fooditem: e.target.textContent\n    });\n    this.props.setNutritional();\n  }\n\n  calorieColor() {\n    if (this.state.calories > 2000) {\n      return \"red\";\n    } else if (this.state.calories > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  totalFatColor() {\n    if (this.state.totalFat > 9) {\n      return \"red\";\n    } else if (this.state.totalFat > 7) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  satFatColor() {\n    if (this.state.satFat > 20) {\n      return \"red\";\n    } else if (this.state.satFat > 17) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  transFatColor() {\n    if (this.state.transFat > 30) {\n      return \"red\";\n    } else if (this.state.transFat > 25) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  proteinColor() {\n    if (this.state.protein > 2000) {\n      return \"red\";\n    } else if (this.state.protein > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  carbColor() {\n    if (this.state.carb > 2000) {\n      return \"red\";\n    } else if (this.state.carb > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  inputCalories(e) {\n    this.setState({\n      calories: e.target.value\n    });\n  }\n\n  inputTotalFat(e) {\n    this.setState({\n      totalFat: e.target.value\n    });\n  }\n\n  inputSatFat(e) {\n    this.setState({\n      satFat: e.target.value\n    });\n  }\n\n  inputTransFat(e) {\n    this.setState({\n      transFat: e.target.value\n    });\n  }\n\n  inputProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  inputCarb(e) {\n    this.setState({\n      carb: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"menuitems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"food list\",\n        ref: \"menu\",\n        size: \"5\",\n        onClick: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nutritional Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"nutrition\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.calorieColor()\n                },\n                placeholder: this.state.calories,\n                onChange: this.inputCalories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Total Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.totalFatColor()\n                },\n                placeholder: this.state.totalFat,\n                onChange: this.inputTotalFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Saturated Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.satFatColor()\n                },\n                placeholder: this.state.satFat,\n                onChange: this.inputSatFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Trans Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.transFatColor()\n                },\n                placeholder: this.state.transFat,\n                onChange: this.inputTransFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.proteinColor()\n                },\n                placeholder: this.state.protein,\n                onChange: this.inputProtein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Carbohydrate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.carbColor()\n                },\n                placeholder: this.state.carb,\n                onChange: this.inputCarb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MenuItems;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/MenuItems.js"],"names":["React","Col","Table","Input","MenuItems","Component","constructor","props","updateData","apiResponse","setState","data","console","log","state","fetchData","fetch","then","response","status","json","statusText","jsonOutput","catch","error","fooditem","calories","totalFat","satFat","transFat","protein","carb","handleChange","bind","inputCalories","inputCarb","inputProtein","inputSatFat","inputTotalFat","inputTransFat","componentDidMount","passRefUpward","refs","e","target","textContent","setNutritional","calorieColor","totalFatColor","satFatColor","transFatColor","proteinColor","carbColor","value","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,KAArB,QAAkC,YAAlC;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA8ElBC,UA9EkB,GA8EJC,WAAD,IAAiB;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,IAAvB;AACH,KAjFiB;;AAAA,SAmFlBI,SAnFkB,GAmFN,MAAM;AACd;AACA;AACAC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CAEKC,QAAD,IACA;AACI,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EACA;AACG,iBAAQD,QAAQ,CAACE,IAAT,EAAR;AACF,SAHD,MAKA;AACIR,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBK,QAAQ,CAACC,MAAzB,GAAkC,GAAlC,GAAyCD,QAAQ,CAACG,UAA9D;AACA,iBAAQ,CAAE,CAAC,SAAD,EAAYH,QAAQ,CAACC,MAArB,CAAF,CAAR;AACH;AACJ,OAbL,EAcK;AAdL,OAeCF,IAfD,CAeQK,UAAD,IAAgB;AACf;AACI,aAAKd,UAAL,CAAgBc,UAAhB;AACH,OAlBT,EAoBCC,KApBD,CAoBQC,KAAD,IACC;AAACZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACG,aAAKhB,UAAL,CAAgB,EAAhB;AACH,OAvBT;AAyBH,KA/GiB;;AAEd,SAAKM,KAAL,GAAa;AACTW,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,QAAQ,EAAE,GAHD;AAITC,MAAAA,MAAM,EAAE,GAJC;AAKTC,MAAAA,QAAQ,EAAE,GALD;AAMTC,MAAAA,OAAO,EAAE,GANA;AAOTC,MAAAA,IAAI,EAAE;AAPG,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKM,aAAL,GAAqB,KAAKA,aAAL,CAAmBN,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,SAAL;AACA,SAAKR,KAAL,CAAWkC,aAAX,CAAyB,KAAKC,IAA9B;AACH;;AACDV,EAAAA,YAAY,CAACW,CAAD,EAAI;AACZ,SAAKjC,QAAL,CAAc;AAAEe,MAAAA,QAAQ,EAAEkB,CAAC,CAACC,MAAF,CAASC;AAArB,KAAd;AACA,SAAKtC,KAAL,CAAWuC,cAAX;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKjC,KAAL,CAAWY,QAAX,GAAsB,IAA1B,EAAgC;AAAC,aAAO,KAAP;AAAc,KAA/C,MACK,IAAG,KAAKZ,KAAL,CAAWY,QAAX,GAAsB,IAAzB,EAA+B;AAAC,aAAO,QAAP;AAAgB,KAAhD,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AACDsB,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKlC,KAAL,CAAWa,QAAX,GAAsB,CAA1B,EAA6B;AAAC,aAAO,KAAP;AAAc,KAA5C,MACK,IAAG,KAAKb,KAAL,CAAWa,QAAX,GAAsB,CAAzB,EAA4B;AAAC,aAAO,QAAP;AAAgB,KAA7C,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AACDsB,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKnC,KAAL,CAAWc,MAAX,GAAoB,EAAxB,EAA4B;AAAC,aAAO,KAAP;AAAc,KAA3C,MACK,IAAG,KAAKd,KAAL,CAAWc,MAAX,GAAoB,EAAvB,EAA2B;AAAC,aAAO,QAAP;AAAgB,KAA5C,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AACDsB,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKpC,KAAL,CAAWe,QAAX,GAAsB,EAA1B,EAA8B;AAAC,aAAO,KAAP;AAAc,KAA7C,MACK,IAAG,KAAKf,KAAL,CAAWe,QAAX,GAAsB,EAAzB,EAA6B;AAAC,aAAO,QAAP;AAAgB,KAA9C,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AACDsB,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKrC,KAAL,CAAWgB,OAAX,GAAqB,IAAzB,EAA+B;AAAC,aAAO,KAAP;AAAc,KAA9C,MACK,IAAG,KAAKhB,KAAL,CAAWgB,OAAX,GAAqB,IAAxB,EAA8B;AAAC,aAAO,QAAP;AAAgB,KAA/C,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AACDsB,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKtC,KAAL,CAAWiB,IAAX,GAAkB,IAAtB,EAA4B;AAAC,aAAO,KAAP;AAAc,KAA3C,MACK,IAAG,KAAKjB,KAAL,CAAWiB,IAAX,GAAkB,IAArB,EAA2B;AAAC,aAAO,QAAP;AAAgB,KAA5C,MACA;AAAC,aAAO,MAAP;AAAe;AACxB;;AAEDG,EAAAA,aAAa,CAACS,CAAD,EAAI;AACb,SAAKjC,QAAL,CAAc;AAAEgB,MAAAA,QAAQ,EAAEiB,CAAC,CAACC,MAAF,CAASS;AAArB,KAAd;AACH;;AACDf,EAAAA,aAAa,CAACK,CAAD,EAAI;AACb,SAAKjC,QAAL,CAAc;AAAEiB,MAAAA,QAAQ,EAAEgB,CAAC,CAACC,MAAF,CAASS;AAArB,KAAd;AACH;;AACDhB,EAAAA,WAAW,CAACM,CAAD,EAAI;AACX,SAAKjC,QAAL,CAAc;AAAEkB,MAAAA,MAAM,EAAEe,CAAC,CAACC,MAAF,CAASS;AAAnB,KAAd;AACH;;AACDd,EAAAA,aAAa,CAACI,CAAD,EAAI;AACb,SAAKjC,QAAL,CAAc;AAAEmB,MAAAA,QAAQ,EAAEc,CAAC,CAACC,MAAF,CAASS;AAArB,KAAd;AACH;;AACDjB,EAAAA,YAAY,CAACO,CAAD,EAAI;AACZ,SAAKjC,QAAL,CAAc;AAAEoB,MAAAA,OAAO,EAAEa,CAAC,CAACC,MAAF,CAASS;AAApB,KAAd;AACH;;AACDlB,EAAAA,SAAS,CAACQ,CAAD,EAAI;AACT,SAAKjC,QAAL,CAAc;AAAEqB,MAAAA,IAAI,EAAEY,CAAC,CAACC,MAAF,CAASS;AAAjB,KAAd;AACH;;AAsCDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAiC,QAAA,IAAI,EAAC,GAAtC;AAA0C,QAAA,OAAO,EAAE,KAAKtB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,+BACI;AAAA,kCACA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACuB,kBAAAA,eAAe,EAAE,KAAKR,YAAL;AAAlB,iBAAd;AAAuD,gBAAA,WAAW,EAAE,KAAKjC,KAAL,CAAWY,QAA/E;AAAyF,gBAAA,QAAQ,EAAE,KAAKQ;AAAxG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACqB,kBAAAA,eAAe,EAAE,KAAKP,aAAL;AAAlB,iBAAd;AAAwD,gBAAA,WAAW,EAAE,KAAKlC,KAAL,CAAWa,QAAhF;AAA0F,gBAAA,QAAQ,EAAE,KAAKW;AAAzG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eASA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACiB,kBAAAA,eAAe,EAAE,KAAKN,WAAL;AAAlB,iBAAd;AAAsD,gBAAA,WAAW,EAAE,KAAKnC,KAAL,CAAWc,MAA9E;AAAsF,gBAAA,QAAQ,EAAE,KAAKS;AAArG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,eAaA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACkB,kBAAAA,eAAe,EAAE,KAAKL,aAAL;AAAlB,iBAAd;AAAwD,gBAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWe,QAAhF;AAA0F,gBAAA,QAAQ,EAAE,KAAKU;AAAzG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbA,eAiBA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACgB,kBAAAA,eAAe,EAAE,KAAKJ,YAAL;AAAlB,iBAAd;AAAuD,gBAAA,WAAW,EAAE,KAAKrC,KAAL,CAAWgB,OAA/E;AAAwF,gBAAA,QAAQ,EAAE,KAAKM;AAAvG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBA,eAqBA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACmB,kBAAAA,eAAe,EAAE,KAAKH,SAAL;AAAlB,iBAAd;AAAoD,gBAAA,WAAW,EAAE,KAAKtC,KAAL,CAAWiB,IAA5E;AAAkF,gBAAA,QAAQ,EAAE,KAAKI;AAAjG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AAvJmC;;AA0JxC,eAAe/B,SAAf","sourcesContent":["import React from \"react\"\nimport { Col, Table, Input } from 'reactstrap';\n\nclass MenuItems extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            fooditem: '',\n            calories: 0.0,\n            totalFat: 0.0,\n            satFat: 0.0,\n            transFat: 0.0,\n            protein: 0.0,\n            carb: 0.0,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.inputCalories = this.inputCalories.bind(this);\n        this.inputCarb = this.inputCarb.bind(this);\n        this.inputProtein = this.inputProtein.bind(this);\n        this.inputSatFat = this.inputSatFat.bind(this);\n        this.inputTotalFat = this.inputTotalFat.bind(this);\n        this.inputTransFat = this.inputTransFat.bind(this);\n    }\n    componentDidMount() {\n        this.fetchData();\n        this.props.passRefUpward(this.refs);\n    }\n    handleChange(e) {\n        this.setState({ fooditem: e.target.textContent });\n        this.props.setNutritional();\n    }\n\n    calorieColor() {\n        if (this.state.calories > 2000) {return \"red\";}\n        else if(this.state.calories > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    totalFatColor() {\n        if (this.state.totalFat > 9) {return \"red\";}\n        else if(this.state.totalFat > 7) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    satFatColor() {\n        if (this.state.satFat > 20) {return \"red\";}\n        else if(this.state.satFat > 17) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    transFatColor() {\n        if (this.state.transFat > 30) {return \"red\";}\n        else if(this.state.transFat > 25) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    proteinColor() {\n        if (this.state.protein > 2000) {return \"red\";}\n        else if(this.state.protein > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    carbColor() {\n        if (this.state.carb > 2000) {return \"red\";}\n        else if(this.state.carb > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n\n    inputCalories(e) {\n        this.setState({ calories: e.target.value });\n    }\n    inputTotalFat(e) {\n        this.setState({ totalFat: e.target.value });\n    }\n    inputSatFat(e) {\n        this.setState({ satFat: e.target.value });\n    }\n    inputTransFat(e) {\n        this.setState({ transFat: e.target.value });\n    }\n    inputProtein(e) {\n        this.setState({ protein: e.target.value });\n    }\n    inputCarb(e) {\n        this.setState({ carb: e.target.value });\n    }\n\n    updateData = (apiResponse) => {\n        this.setState({data: apiResponse});\n        console.log(this.state.data);\n    }\n\n    fetchData = () => {\n        //In package.json add \"proxy\": \"http://localhost:5000\" \n        //This will allow redirect to REST api in Flask w/o CORS errors\n        fetch('/example_api')\n        .then(\n            (response) => \n            {\n                if (response.status === 200)\n                {\n                   return (response.json()) ;\n                }\n                else\n                {\n                    console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n                    return ([ [\"status \", response.status]]);\n                }\n            }\n            )//The promise response is returned, then we extract the json data\n        .then ((jsonOutput) => //jsonOutput now has result of the data extraction\n                {\n                    this.updateData(jsonOutput);\n                }\n            )\n        .catch((error) => \n                {console.log(error);\n                    this.updateData(\"\");\n                } )\n    \n    }\n\n\n    render() {\n        return (\n            <Col className=\"menuitems\">\n                <h2>Menu Items</h2>\n                <select id=\"food list\" ref=\"menu\"size=\"5\" onClick={this.handleChange}></select>\n                <h3>Nutritional Info</h3>\n                <Table className=\"nutrition\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Calories</th>\n                        <td><Input style={{backgroundColor: this.calorieColor(),}} placeholder={this.state.calories} onChange={this.inputCalories}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Total Fat</th>\n                        <td><Input style={{backgroundColor: this.totalFatColor(),}} placeholder={this.state.totalFat} onChange={this.inputTotalFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Saturated Fat</th>\n                        <td><Input style={{backgroundColor: this.satFatColor(),}} placeholder={this.state.satFat} onChange={this.inputSatFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Trans Fat</th>\n                        <td><Input style={{backgroundColor: this.transFatColor(),}} placeholder={this.state.transFat} onChange={this.inputTransFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Protein</th>\n                        <td><Input style={{backgroundColor: this.proteinColor(),}} placeholder={this.state.protein} onChange={this.inputProtein}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Carbohydrate</th>\n                        <td><Input style={{backgroundColor: this.carbColor(),}} placeholder={this.state.carb} onChange={this.inputCarb}></Input></td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Col>\n        );\n    }\n}\n\nexport default MenuItems;\n"]},"metadata":{},"sourceType":"module"}