{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js\";\nimport React from \"react\";\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setList = foodtype => {\n      let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"];\n      let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"];\n      let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"];\n      let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"];\n      let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"];\n      let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      var opt;\n      var cal;\n\n      for (var i = 5; i >= 0; i--) {\n        this.state.myRequestedRefs.menu.remove(i);\n      }\n\n      for (i = 0; i < 5; i++) {\n        switch (foodtype) {\n          case 'Protein':\n            opt = proteins[i];\n            cal = proteinsCalories[i];\n            break;\n\n          case 'Fruits':\n            opt = fruits[i];\n            cal = fruitsCalories[i];\n            break;\n\n          case 'Vegitables':\n            opt = vegitables[i];\n            cal = vegitablesCalories[i];\n            break;\n\n          case 'Dairy':\n            opt = dairy[i];\n            cal = dairyCalories[i];\n            break;\n\n          case 'Grain':\n            opt = grain[i];\n            cal = grainCalories[i];\n            break;\n\n          default:\n            break;\n        }\n\n        var el = document.createElement(\"option\");\n        el.textContent = opt;\n        el.value = cal;\n        this.state.myRequestedRefs.menu.append(el);\n      }\n    };\n\n    this.handleclick = () => {\n      console.log(\"button clicked\");\n      console.log(this.state.selectedRefs.calories.textContent);\n\n      if (this.state.selectedRefs.selected.value !== \"\") {\n        this.removeFromSelected();\n      } else if (this.state.myRequestedRefs.menu.value !== \"\") {\n        this.addToSelected();\n      }\n    };\n\n    this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n    this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n  }\n\n  getRefsFromMenu(childRefs) {\n    this.setState({\n      myRequestedRefs: childRefs\n    });\n  }\n\n  getRefsFromSelected(childRefs) {\n    this.setState({\n      selectedRefs: childRefs\n    });\n  }\n\n  addToSelected() {\n    var values = this.state.myRequestedRefs.menu;\n    var select = this.state.selectedRefs.selected;\n    var el = document.createElement(\"option\");\n    var cal = this.state.selectedRefs.calories;\n    el.textContent = values.options[values.selectedIndex].text;\n    el.value = values.value;\n    select.append(el);\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(values.value);\n    totalCal += valueCal;\n    cal.innerHTML = totalCal;\n  }\n\n  removeFromSelected() {\n    var select = this.state.selectedRefs.selected;\n    var cal = this.state.selectedRefs.calories;\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(select.value);\n    console.log(totalCal);\n    console.log(valueCal);\n    totalCal -= valueCal;\n    console.log(totalCal);\n    cal.innerHTML = totalCal;\n    select.removeChild(select.options[select.selectedIndex]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        ref: \"food\",\n        setList: this.setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        ref: \"Menu\",\n        passRefUpward: this.getRefsFromMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        ref: \"button\",\n        addToSelected: this.addToSelected,\n        removeFromSelected: this.removeFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {\n        ref: \"Selected\",\n        passRefUpward: this.getRefsFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js"],"names":["React","Categories","MenuItems","SelectedItems","AddButton","App","Component","constructor","props","setList","foodtype","proteins","fruits","vegitables","dairy","grain","proteinsCalories","fruitsCalories","vegitablesCalories","dairyCalories","grainCalories","opt","cal","i","state","myRequestedRefs","menu","remove","el","document","createElement","textContent","value","append","handleclick","console","log","selectedRefs","calories","selected","removeFromSelected","addToSelected","getRefsFromMenu","bind","getRefsFromSelected","childRefs","setState","values","select","options","selectedIndex","text","totalCal","parseInt","innerHTML","valueCal","removeChild","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    setList = (foodtype) => {\n        let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n        \n        var opt;\n        var cal;\n    \n        for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(i = 0; i < 5; i++) {\n            switch (foodtype) {\n                case 'Protein':\n                    opt = proteins[i];\n                    cal = proteinsCalories[i];\n                    break;\n                case 'Fruits':\n                    opt = fruits[i];\n                    cal = fruitsCalories[i];\n                    break;\n                case 'Vegitables':\n                    opt = vegitables[i];\n                    cal = vegitablesCalories[i];\n                    break;\n                case 'Dairy':\n                    opt = dairy[i];\n                    cal = dairyCalories[i];\n                    break;\n                case 'Grain':\n                    opt = grain[i];\n                    cal = grainCalories[i];\n                    break;\n                default:\n                    break;\n            }\n            var el = document.createElement(\"option\");\n            el.textContent = opt;\n            el.value = cal;\n            \n            this.state.myRequestedRefs.menu.append(el);   \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        this.setState({\n            myRequestedRefs: childRefs\n        });\n    }\n\n    getRefsFromSelected(childRefs) {\n        this.setState({\n            selectedRefs: childRefs\n        });\n    }\n\n    addToSelected() {\n\n        var values = this.state.myRequestedRefs.menu;\n        var select = this.state.selectedRefs.selected;\n        var el = document.createElement(\"option\");\n        var cal = this.state.selectedRefs.calories;\n    \n        el.textContent = values.options[values.selectedIndex].text;\n        el.value = values.value;\n        select.append(el);\n    \n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal += valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n    }\n    \n    removeFromSelected() {\n        var select = this.state.selectedRefs.selected;\n        var cal = this.state.selectedRefs.calories;\n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(select.value);\n        console.log(totalCal);\n        console.log(valueCal);\n    \n        totalCal -= valueCal;\n    \n        console.log(totalCal);\n        cal.innerHTML = totalCal;\n    \n        select.removeChild(select.options[select.selectedIndex]);\n    }\n\n    handleclick = () => {\n        console.log(\"button clicked\");\n        console.log(this.state.selectedRefs.calories.textContent);\n        if (this.state.selectedRefs.selected.value !== \"\") {\n            this.removeFromSelected();\n        }else \n        if (this.state.myRequestedRefs.menu.value !== \"\") {\n            this.addToSelected();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Categories ref=\"food\" setList={this.setList}/>\n                <MenuItems ref=\"Menu\" passRefUpward={this.getRefsFromMenu}/>\n                <AddButton ref=\"button\" addToSelected={this.addToSelected} removeFromSelected={this.removeFromSelected}/>\n                <SelectedItems ref=\"Selected\" passRefUpward={this.getRefsFromSelected}/>\n            </div>\n        );\n    }\n} \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}