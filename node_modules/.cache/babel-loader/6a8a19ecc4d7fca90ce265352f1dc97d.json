{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/SelectedItems.js\";\nimport React from \"react\";\nimport { Col, Table, Button, Input } from 'reactstrap';\nimport { Progress } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectedItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: '',\n      calories: 0.0,\n      totalFat: 0.0,\n      satFat: 0.0,\n      transFat: 0.0,\n      protein: 0.0,\n      carb: 0.0,\n      calGoal: 2000\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.inputCalories = this.inputCalories.bind(this);\n    this.inputCalGoal = this.inputCalGoal.bind(this);\n    this.inputCarb = this.inputCarb.bind(this);\n    this.inputProtein = this.inputProtein.bind(this);\n    this.inputSatFat = this.inputSatFat.bind(this);\n    this.inputTotalFat = this.inputTotalFat.bind(this);\n    this.inputTransFat = this.inputTransFat.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.passRefUpward(this.refs);\n  }\n\n  handleChange(e) {\n    this.setState({\n      item: e.target.textContent\n    });\n  }\n\n  calorieColor() {\n    if (this.state.calories > 2000) {\n      return \"red\";\n    } else if (this.state.calories > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  totalFatColor() {\n    if (this.state.totalFat > 9) {\n      return \"red\";\n    } else if (this.state.totalFat > 7) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  satFatColor() {\n    if (this.state.satFat > 20) {\n      return \"red\";\n    } else if (this.state.satFat > 17) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  transFatColor() {\n    if (this.state.transFat > 30) {\n      return \"red\";\n    } else if (this.state.transFat > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  proteinColor() {\n    if (this.state.protein > 2000) {\n      return \"red\";\n    } else if (this.state.protein > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  carbColor() {\n    if (this.state.carb > 2000) {\n      return \"red\";\n    } else if (this.state.carb > 1700) {\n      return \"yellow\";\n    } else {\n      return \"cyan\";\n    }\n  }\n\n  inputCalGoal(e) {\n    this.setState({\n      calGoal: e.target.value\n    });\n  }\n\n  inputCalories(e) {\n    this.setState({\n      calories: e.target.value\n    });\n  }\n\n  inputTotalFat(e) {\n    this.setState({\n      totalFat: e.target.value\n    });\n  }\n\n  inputSatFat(e) {\n    this.setState({\n      satFat: e.target.value\n    });\n  }\n\n  inputTransFat(e) {\n    this.setState({\n      transFat: e.target.value\n    });\n  }\n\n  inputProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  inputCarb(e) {\n    this.setState({\n      carb: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"selecteditems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selected foods\",\n        size: \"8\",\n        ref: \"selected\",\n        onClick: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calorie Goal: \", /*#__PURE__*/_jsxDEV(Input, {\n          ref: \"calories\",\n          type: \"number\",\n          placeholder: this.state.calGoal,\n          onChange: this.inputCalGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        value: parseFloat(this.state.calories) / parseFloat(this.state.calGoal) * 100,\n        color: \"danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"nutrition\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.calorieColor()\n                },\n                placeholder: this.state.calories,\n                onChange: this.inputCalories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Total Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.totalFatColor()\n                },\n                placeholder: this.state.totalFat,\n                onChange: this.inputTotalFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Saturated Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.satFatColor()\n                },\n                placeholder: this.state.satFat,\n                onChange: this.inputSatFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Trans Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.transFatColor()\n                },\n                placeholder: this.state.transFat,\n                onChange: this.inputTransFat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.proteinColor()\n                },\n                placeholder: this.state.protein,\n                onChange: this.inputProtein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Carbohydrate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  backgroundColor: this.carbColor()\n                },\n                placeholder: this.state.carb,\n                onChange: this.inputCarb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SelectedItems;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/SelectedItems.js"],"names":["React","Col","Table","Button","Input","Progress","SelectedItems","Component","constructor","props","state","item","calories","totalFat","satFat","transFat","protein","carb","calGoal","handleChange","bind","inputCalories","inputCalGoal","inputCarb","inputProtein","inputSatFat","inputTotalFat","inputTransFat","componentDidMount","passRefUpward","refs","e","setState","target","textContent","calorieColor","totalFatColor","satFatColor","transFatColor","proteinColor","carbColor","value","render","parseFloat","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Table, Button, Input } from 'reactstrap';\nimport { Progress } from \"reactstrap\";\n\nclass SelectedItems extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            item: '' , \n            calories: 0.0,\n            totalFat: 0.0,\n            satFat: 0.0,\n            transFat: 0.0,\n            protein: 0.0,\n            carb: 0.0,\n            calGoal: 2000\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.inputCalories = this.inputCalories.bind(this);\n        this.inputCalGoal = this.inputCalGoal.bind(this);\n        this.inputCarb = this.inputCarb.bind(this);\n        this.inputProtein = this.inputProtein.bind(this);\n        this.inputSatFat = this.inputSatFat.bind(this);\n        this.inputTotalFat = this.inputTotalFat.bind(this);\n        this.inputTransFat = this.inputTransFat.bind(this);\n    }\n    componentDidMount() {\n        this.props.passRefUpward(this.refs);\n    }\n    handleChange(e) {\n        this.setState({ item: e.target.textContent });\n    }\n\n    calorieColor() {\n        if (this.state.calories > 2000) {return \"red\";}\n        else if(this.state.calories > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    totalFatColor() {\n        if (this.state.totalFat > 9) {return \"red\";}\n        else if(this.state.totalFat > 7) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    satFatColor() {\n        if (this.state.satFat > 20) {return \"red\";}\n        else if(this.state.satFat > 17) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    transFatColor() {\n        if (this.state.transFat > 30) {return \"red\";}\n        else if(this.state.transFat > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    proteinColor() {\n        if (this.state.protein > 2000) {return \"red\";}\n        else if(this.state.protein > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n    carbColor() {\n        if (this.state.carb > 2000) {return \"red\";}\n        else if(this.state.carb > 1700) {return \"yellow\"} \n        else {return \"cyan\";}\n    }\n\n    inputCalGoal(e) {\n        this.setState({ calGoal: e.target.value });\n    }\n    inputCalories(e) {\n        this.setState({ calories: e.target.value });\n    }\n    inputTotalFat(e) {\n        this.setState({ totalFat: e.target.value });\n    }\n    inputSatFat(e) {\n        this.setState({ satFat: e.target.value });\n    }\n    inputTransFat(e) {\n        this.setState({ transFat: e.target.value });\n    }\n    inputProtein(e) {\n        this.setState({ protein: e.target.value });\n    }\n    inputCarb(e) {\n        this.setState({ carb: e.target.value });\n    }\n\n    render() {\n        return (\n            <Col className=\"selecteditems\">\n                <h2>Selected Items</h2>\n                <select id=\"selected foods\" size=\"8\" ref=\"selected\" onClick={this.handleChange}></select> \n                <h3>Calorie Goal: <Input ref=\"calories\" type=\"number\" placeholder={this.state.calGoal} onChange={this.inputCalGoal}></Input></h3>\n                <Progress value={(parseFloat(this.state.calories) / parseFloat(this.state.calGoal)) * 100} color=\"danger\"/>\n                <Table className=\"nutrition\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Calories</th>\n                        <td><Input style={{backgroundColor: this.calorieColor(),}} placeholder={this.state.calories} onChange={this.inputCalories}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Total Fat</th>\n                        <td><Input style={{backgroundColor: this.totalFatColor(),}} placeholder={this.state.totalFat} onChange={this.inputTotalFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Saturated Fat</th>\n                        <td><Input style={{backgroundColor: this.satFatColor(),}} placeholder={this.state.satFat} onChange={this.inputSatFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Trans Fat</th>\n                        <td><Input style={{backgroundColor: this.transFatColor(),}} placeholder={this.state.transFat} onChange={this.inputTransFat}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Protein</th>\n                        <td><Input style={{backgroundColor: this.proteinColor(),}} placeholder={this.state.protein} onChange={this.inputProtein}></Input></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Carbohydrate</th>\n                        <td><Input style={{backgroundColor: this.carbColor(),}} placeholder={this.state.carb} onChange={this.inputCarb}></Input></td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Col>\n        );\n    }\n}\n\nexport default SelectedItems;"]},"metadata":{},"sourceType":"module"}