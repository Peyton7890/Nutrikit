{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/AddButton.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Headings from './Headings';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectedItems extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selecteditems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selected foods\",\n        size: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Calories: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"total calories\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass MenuItems extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuitems\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"food list\",\n        size: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handler = () => {\n      this.props.callParent();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"food types\",\n        id: \"food types\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Protein\",\n          onClick: this.handler,\n          children: \"Protein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fruits\",\n          onClick: this.handler,\n          children: \"Fruits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Vegitables\",\n          onClick: this.handler,\n          children: \"Vegitables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dairy\",\n          onClick: this.handler,\n          children: \"Dairy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grain\",\n          onClick: this.handler,\n          children: \"Grain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass AddButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setList = foodtype => {\n      console.log(\"setlist called\");\n      console.log(foodtype); // var el = document.createElement(\"option\");\n      // el.textContent = \"opt\";\n      // foodtype.current.appendChild(el);\n      // let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n      // let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n      // let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n      // let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n      // let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n      // let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n      // let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n      // let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n      // let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n      // let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n      // var select = document.getElementById(\"food list\")\n      // for(var i = 5; i >= 0; i--) {select.remove(i)}\n      // for(var i = 0; i < 5; i++) {\n      //     switch (foodtype) {\n      //         case 'Protein':\n      //             var opt = proteins[i];\n      //             var cal = proteinsCalories[i];\n      //             break;\n      //         case 'Fruits':\n      //             var opt = fruits[i];\n      //             var cal = fruitsCalories[i];\n      //             break;\n      //         case 'Vegitables':\n      //             var opt = vegitables[i];\n      //             var cal = vegitablesCalories[i];\n      //             break;\n      //         case 'Dairy':\n      //             var opt = dairy[i];\n      //             var cal = dairyCalories[i];\n      //             break;\n      //         case 'Grain':\n      //             var opt = grain[i];\n      //             var cal = grainCalories[i];\n      //             break;\n      //         default:\n      //             break;\n      //     }\n      //     var el = document.createElement(\"option\");\n      //     el.textContent = opt;\n      //     el.value = cal;\n      //     select.appendChild(el);\n      // }\n    };\n\n    this.foodtypes = /*#__PURE__*/React.createRef();\n  }\n\n  addToSelected(values) {\n    var select = document.getElementById(\"selected foods\");\n    var el = document.createElement(\"option\");\n    var cal = document.getElementById(\"total calories\");\n    el.textContent = values.options[values.selectedIndex].text;\n    el.value = values.value;\n    select.appendChild(el);\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(values.value);\n    totalCal += valueCal;\n    cal.innerHTML = totalCal;\n  }\n\n  removeFromSelected(values) {\n    var select = document.getElementById(\"selected foods\");\n    var cal = document.getElementById(\"total calories\");\n    var totalCal = parseInt(cal.innerHTML);\n    var valueCal = parseInt(values.value);\n    totalCal -= valueCal;\n    cal.innerHTML = totalCal;\n    select.removeChild(values.options[values.selectedIndex]);\n  }\n\n  handleclick() {\n    console.log(\"button clicked\"); // if (document.getElementById(\"selected foods\").value !== \"\") {\n    //     this.removeFromSelected(document.getElementById(\"selected foods\"));\n    // }else if (document.getElementById(\"food list\").value !== \"\") {\n    //     this.addToSelected(document.getElementById(\"food list\"));\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addbutton\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        ref: this.foodtypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \">>\",\n        id: \"add button\",\n        onClick: () => this.handleclick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddButton;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(Headings, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button\",\n      children: /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 178,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/AddButton.js"],"names":["React","ReactDOM","Headings","SelectedItems","Component","render","MenuItems","Categories","constructor","props","handler","callParent","AddButton","setList","foodtype","console","log","foodtypes","createRef","addToSelected","values","select","document","getElementById","el","createElement","cal","textContent","options","selectedIndex","text","value","appendChild","totalCal","parseInt","innerHTML","valueCal","removeFromSelected","removeChild","handleclick"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactDOM from 'react-dom';\nimport Headings from './Headings';\nimport './index.css';\n\nclass SelectedItems extends React.Component {\n    render() {\n        return (\n            <div className=\"selecteditems\">\n                <h2>Selected Items</h2>\n                <select id=\"selected foods\" size=\"8\"></select> \n                <h3>Total Calories: <span id=\"total calories\">0</span></h3>\n            </div>\n        );\n    }\n}\n\n\nclass MenuItems extends React.Component {\n    render() {\n        return (\n            <div className=\"menuitems\">\n                <h2>Menu Items</h2>\n                <select id=\"food list\" size=\"5\"></select>\n            </div>\n        );\n    }\n}\n\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    handler = () => {this.props.callParent();}\n    render() {\n        return (\n            <div className=\"categories\">\n            <h2>Categories</h2>\n            <select name=\"food types\" id=\"food types\">\n                <option value=\"Protein\" onClick={this.handler}>Protein</option>\n                <option value=\"Fruits\" onClick={this.handler}>Fruits</option>\n                <option value=\"Vegitables\" onClick={this.handler}>Vegitables</option>\n                <option value=\"Dairy\" onClick={this.handler}>Dairy</option>\n                <option value=\"Grain\" onClick={this.handler}>Grain</option>\n            </select>\n            </div>\n        );\n    }\n}\n\n\n\nclass AddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.foodtypes = React.createRef();\n    }\n     \n    setList = (foodtype) => {\n\n        console.log(\"setlist called\")\n        console.log(foodtype);\n        // var el = document.createElement(\"option\");\n        // el.textContent = \"opt\";\n            \n        // foodtype.current.appendChild(el);\n\n        // let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        // let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        // let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        // let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        // let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        // let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        // let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        // let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        // let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        // let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n    \n        // var select = document.getElementById(\"food list\")\n    \n        // for(var i = 5; i >= 0; i--) {select.remove(i)}\n    \n        // for(var i = 0; i < 5; i++) {\n        //     switch (foodtype) {\n        //         case 'Protein':\n        //             var opt = proteins[i];\n        //             var cal = proteinsCalories[i];\n        //             break;\n        //         case 'Fruits':\n        //             var opt = fruits[i];\n        //             var cal = fruitsCalories[i];\n        //             break;\n        //         case 'Vegitables':\n        //             var opt = vegitables[i];\n        //             var cal = vegitablesCalories[i];\n        //             break;\n        //         case 'Dairy':\n        //             var opt = dairy[i];\n        //             var cal = dairyCalories[i];\n        //             break;\n        //         case 'Grain':\n        //             var opt = grain[i];\n        //             var cal = grainCalories[i];\n        //             break;\n        //         default:\n        //             break;\n        //     }\n        //     var el = document.createElement(\"option\");\n        //     el.textContent = opt;\n        //     el.value = cal;\n            \n        //     select.appendChild(el);\n            \n        // }\n    }\n\n    addToSelected(values) {\n\n        var select = document.getElementById(\"selected foods\")\n        var el = document.createElement(\"option\");\n        var cal = document.getElementById(\"total calories\");\n    \n        el.textContent = values.options[values.selectedIndex].text;\n        el.value = values.value;\n        select.appendChild(el);\n    \n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal += valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n    }\n    \n    removeFromSelected(values) {\n        var select = document.getElementById(\"selected foods\")\n        var cal = document.getElementById(\"total calories\");\n    \n        var totalCal = parseInt(cal.innerHTML);\n        var valueCal = parseInt(values.value);\n    \n        totalCal -= valueCal;\n    \n        cal.innerHTML = totalCal;\n    \n        select.removeChild(values.options[values.selectedIndex]);\n    }\n\n    handleclick() {\n        console.log(\"button clicked\")\n        // if (document.getElementById(\"selected foods\").value !== \"\") {\n        //     this.removeFromSelected(document.getElementById(\"selected foods\"));\n        // }else if (document.getElementById(\"food list\").value !== \"\") {\n        //     this.addToSelected(document.getElementById(\"food list\"));\n        // }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"addbutton\">\n                <Categories ref={this.foodtypes}/>\n                <MenuItems/>\n                <input type=\"button\" value = \">>\" id=\"add button\" onClick={() => this.handleclick()}/>\n                <SelectedItems/>\n            </div>\n        );\n    }\n} \n\nexport default AddButton;\n\nReactDOM.render(\n    <div>\n      <Headings/>\n      <div class=\"flex\">\n        {/* <Categories/> */}\n        {/* <MenuItems /> */}\n        <div class=\"button\"><AddButton /></div>\n        {/* <SelectedItems /> */}\n      </div>\n    </div>,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}