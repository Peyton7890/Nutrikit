{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js\";\nimport React from \"react\";\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport { Row } from 'reactstrap';\nimport './index.css';\nimport MyComponent from \"./mycomponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = apiResponse => {\n      console.log(apiResponse);\n      this.setState({\n        data: apiResponse\n      }); // this.props.menu.append(el);\n    };\n\n    this.fetchData = () => {\n      fetch('/example_api').then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log(\"HTTP error:\" + response.status + \":\" + response.statusText);\n          return [[\"status \", response.status]];\n        }\n      }) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => {\n        //jsonOutput now has result of the data extraction\n        this.updateData(jsonOutput);\n      }).catch(error => {\n        console.log(error);\n        this.updateData(\"\");\n      });\n    };\n\n    this.setList = foodtype => {\n      let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"];\n      let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"];\n      let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"];\n      let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"];\n      let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"];\n      let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"];\n      let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"];\n      let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"];\n      let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"];\n      let proteinsTotalFat = [\"5.73\", \"13.1\", \"9.3\", \"6.34\", \"19.94\"];\n      let fruitsTotalFat = [\"0.12\", \"0.33\", \"0.12\", \"0.16\", \"0.33\"];\n      let vegitablesTotalFat = [\"0.3\", \"0.22\", \"0.2\", \"0.4\", \"0.9\"];\n      let dairyTotalFat = [\"3.9\", \"5.0\", \"9.0\", \"0.2\", \"4.3\"];\n      let grainTotalFat = [\"1.1\", \"1.7\", \"1.7\", \"3.3\", \"0.5\"];\n      let proteinsSatFat = [\"2.183\", \"5.3\", \"2.5\", \"1.0\", \"2.884\"];\n      let fruitsSatFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let vegitablesSatFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let dairySatFat = [\"2.4\", \"0.0\", \"6.0\", \"0.1\", \"0.0\"];\n      let grainSatFat = [\"0.0\", \"0.1\", \"0.3\", \"0.1\", \"0.1\"];\n      let proteinsTransFat = [\"0.182\", \"0.6\", \"0.1\", \"0.0\", \"0.0\"];\n      let fruitsTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let vegitablesTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let dairyTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let grainTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"];\n      let proteinsProtein = [\"29.44\", \"15.18\", \"27.14\", \"19.84\", \"36.49\"];\n      let fruitsProtein = [\"0.94\", \"1.09\", \"0.54\", \"0.72\", \"0.74\"];\n      let vegitablesProtein = [\"1.2\", \"1.83\", \"1.2\", \"2.9\", \"4.3\"];\n      let dairyProtein = [\"3.2\", \"9.0\", \"7.0\", \"8.3\", \"11.12\"];\n      let grainProtein = [\"4.0\", \"13.8\", \"6.3\", \"2.7\", \"1.1\"];\n      let proteinsTotalCarb = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"30.16\"];\n      let fruitsTotalCarb = [\"11.75\", \"22.84\", \"13.12\", \"18.1\", \"14.49\"];\n      let vegitablesTotalCarb = [\"3.3\", \"6.97\", \"3.4\", \"3.6\", \"8.8\"];\n      let dairyTotalCarb = [\"4.8\", \"3.98\", \"0.0\", \"12.5\", \"3.38\"];\n      let grainTotalCarb = [\"13.8\", \"68\", \"35.2\", \"16.9\", \"8.5\"];\n      var name;\n      var cal;\n      var totalFat;\n      var satFat;\n      var transFat;\n      var protein;\n      var totalCarb;\n\n      for (var i = 5; i >= 0; i--) {\n        this.state.myRequestedRefs.menu.remove(i);\n      }\n\n      for (i = 0; i < this.state.data.length; i++) {\n        switch (foodtype) {\n          case 'Protein':\n            if (this.state.data[i][2] == \"Protein\") {\n              name = this.state.data[i][2];\n              cal = this.state.data[i][2];\n              totalFat = this.state.data[i][2];\n              satFat = this.state.data[i][2];\n              transFat = this.state.data[i][2];\n              protein = this.state.data[i][2];\n              totalCarb = this.state.data[i][2];\n            }\n\n            break;\n\n          case 'Fruits':\n            name = fruits[1];\n            cal = fruitsCalories[1];\n            totalFat = fruitsTotalFat[1];\n            satFat = fruitsSatFat[1];\n            transFat = fruitsTransFat[1];\n            protein = fruitsProtein[1];\n            totalCarb = fruitsTotalCarb[1];\n            break;\n\n          case 'Vegitables':\n            name = vegitables[1];\n            cal = vegitablesCalories[1];\n            totalFat = vegitablesTotalFat[1];\n            satFat = vegitablesSatFat[1];\n            transFat = vegitablesTransFat[1];\n            protein = vegitablesProtein[1];\n            totalCarb = vegitablesTotalCarb[1];\n            break;\n\n          case 'Dairy':\n            name = dairy[1];\n            cal = dairyCalories[1];\n            totalFat = dairyTotalFat[1];\n            satFat = dairySatFat[1];\n            transFat = dairyTransFat[1];\n            protein = dairyProtein[1];\n            totalCarb = dairyTotalCarb[1];\n            break;\n\n          case 'Grain':\n            name = grain[1];\n            cal = grainCalories[1];\n            totalFat = grainTotalFat[1];\n            satFat = grainSatFat[1];\n            transFat = grainTransFat[1];\n            protein = grainProtein[1];\n            totalCarb = grainTotalCarb[1];\n            break;\n\n          default:\n            break;\n        }\n\n        var el = document.createElement(\"option\");\n        el.textContent = name;\n        el.value = cal;\n        el.totalFat = totalFat;\n        el.satFat = satFat;\n        el.transFat = transFat;\n        el.protein = protein;\n        el.totalCarb = totalCarb;\n        this.state.myRequestedRefs.menu.append(el);\n      }\n    };\n\n    this.addToSelected = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      this.setNutritional();\n      var values = this.state.myRequestedRefs.menu;\n      var select = this.state.selectedRefs.selected;\n      var el = document.createElement(\"option\");\n      el.textContent = values.options[values.selectedIndex].text;\n      el.value = values.value;\n      select.append(el);\n      this.Selected.current.setState({\n        calories: this.Selected.current.state.calories + parseInt(this.Menu.current.state.calories),\n        totalFat: this.Selected.current.state.totalFat + parseFloat(this.Menu.current.state.totalFat),\n        satFat: this.Selected.current.state.satFat + parseFloat(this.Menu.current.state.satFat),\n        transFat: this.Selected.current.state.transFat + parseFloat(this.Menu.current.state.transFat),\n        protein: this.Selected.current.state.protein + parseFloat(this.Menu.current.state.protein),\n        carb: this.Selected.current.state.carb + parseFloat(this.Menu.current.state.carb)\n      });\n    };\n\n    this.removeFromSelected = () => {\n      if (this.state.selectedRefs.selected.value === \"\") {\n        return;\n      }\n\n      var select = this.state.selectedRefs.selected;\n      var values = this.state.myRequestedRefs.menu;\n      this.Selected.current.setState({\n        calories: this.Selected.current.state.calories - parseInt(values.value),\n        totalFat: this.Selected.current.state.totalFat - parseFloat(values.options[values.selectedIndex].totalFat),\n        satFat: this.Selected.current.state.satFat - parseFloat(values.options[values.selectedIndex].satFat),\n        transFat: this.Selected.current.state.transFat - parseFloat(values.options[values.selectedIndex].transFat),\n        protein: this.Selected.current.state.protein - parseFloat(values.options[values.selectedIndex].protein),\n        carb: this.Selected.current.state.carb - parseFloat(values.options[values.selectedIndex].totalCarb)\n      });\n      select.removeChild(select.options[select.selectedIndex]);\n    };\n\n    this.setNutritional = () => {\n      if (this.state.myRequestedRefs.menu.value === \"\") {\n        return;\n      }\n\n      var values = this.state.myRequestedRefs.menu;\n      this.Menu.current.setState({\n        calories: values.options[values.selectedIndex].value,\n        totalFat: values.options[values.selectedIndex].totalFat,\n        satFat: values.options[values.selectedIndex].satFat,\n        transFat: values.options[values.selectedIndex].transFat,\n        protein: values.options[values.selectedIndex].protein,\n        carb: values.options[values.selectedIndex].totalCarb\n      });\n    };\n\n    this.state = {\n      data: \"\"\n    };\n    this.Categories = /*#__PURE__*/React.createRef();\n    this.Menu = /*#__PURE__*/React.createRef();\n    this.Selected = /*#__PURE__*/React.createRef();\n    this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n    this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getRefsFromMenu(childRefs) {\n    this.setState({\n      myRequestedRefs: childRefs\n    });\n  }\n\n  getRefsFromSelected(childRefs) {\n    this.setState({\n      selectedRefs: childRefs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(MyComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Categories, {\n        ref: this.Categories,\n        setList: this.setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        ref: this.Menu,\n        passRefUpward: this.getRefsFromMenu,\n        setNutritional: this.setNutritional\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        ref: \"button\",\n        addToSelected: this.addToSelected,\n        removeFromSelected: this.removeFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectedItems, {\n        ref: this.Selected,\n        passRefUpward: this.getRefsFromSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peytonmartin/RIT/SWEN344/React-pdm4689/pdm4689-react/src/App.js"],"names":["React","Categories","MenuItems","SelectedItems","AddButton","Row","MyComponent","App","Component","constructor","props","updateData","apiResponse","console","log","setState","data","fetchData","fetch","then","response","status","json","statusText","jsonOutput","catch","error","setList","foodtype","proteins","fruits","vegitables","dairy","grain","proteinsCalories","fruitsCalories","vegitablesCalories","dairyCalories","grainCalories","proteinsTotalFat","fruitsTotalFat","vegitablesTotalFat","dairyTotalFat","grainTotalFat","proteinsSatFat","fruitsSatFat","vegitablesSatFat","dairySatFat","grainSatFat","proteinsTransFat","fruitsTransFat","vegitablesTransFat","dairyTransFat","grainTransFat","proteinsProtein","fruitsProtein","vegitablesProtein","dairyProtein","grainProtein","proteinsTotalCarb","fruitsTotalCarb","vegitablesTotalCarb","dairyTotalCarb","grainTotalCarb","name","cal","totalFat","satFat","transFat","protein","totalCarb","i","state","myRequestedRefs","menu","remove","length","el","document","createElement","textContent","value","append","addToSelected","setNutritional","values","select","selectedRefs","selected","options","selectedIndex","text","Selected","current","calories","parseInt","Menu","parseFloat","carb","removeFromSelected","removeChild","createRef","getRefsFromMenu","bind","getRefsFromSelected","componentDidMount","childRefs","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Categories from \"./Categories\";\nimport MenuItems from \"./MenuItems\";\nimport SelectedItems from \"./SelectedItems\";\nimport AddButton from \"./AddButton\";\nimport { Row } from 'reactstrap';\nimport './index.css';\nimport MyComponent from \"./mycomponent\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={data: \"\"}\n\n        this.Categories = React.createRef();\n        this.Menu = React.createRef();\n        this.Selected = React.createRef();\n\n        this.getRefsFromMenu = this.getRefsFromMenu.bind(this);\n        this.getRefsFromSelected = this.getRefsFromSelected.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    updateData = (apiResponse) => {\n        console.log(apiResponse);\n        this.setState({data: apiResponse});\n        // this.props.menu.append(el);\n    }\n\n    fetchData = () => {\n        fetch('/example_api')\n        .then(\n            (response) => {\n                if (response.status === 200){return (response.json()) ;}\n                else{\n                    console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n                    return ([ [\"status \", response.status]]);\n                }\n            })//The promise response is returned, then we extract the json data\n        .then ((jsonOutput) => {//jsonOutput now has result of the data extraction\n            this.updateData(jsonOutput);\n        })\n        .catch((error) => {\n            console.log(error);\n                this.updateData(\"\");\n        })\n    \n    }\n\n    setList = (foodtype) => {\n        let proteins = [\"steak\", \"ground beef\", \"chicken\", \"fish\", \"soy\"]\n        let fruits = [\"orange\", \"banana\", \"pineapple\", \"grapes\", \"blueberries\"]\n        let vegitables = [\"romaine\", \"green beans\", \"squach\", \"spinach\", \"kale\"]\n        let dairy = [\"milk\", \"yogurt\", \"cheddar cheese\", \"skim milk\", \"cottage cheese\"]\n        let grain = [\"bread\", \"bagel\", \"pita\", \"naan\", \"tortilla\"]\n    \n        let proteinsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let fruitsCalories = [\"300\", \"200\", \"100\", \"80\", \"50\"]\n        let vegitablesCalories = [\"30\", \"40\", \"100\", \"50\", \"10\"]\n        let dairyCalories = [\"300\", \"200\", \"200\", \"100\", \"80\"]\n        let grainCalories = [\"200\", \"300\", \"250\", \"210\", \"120\"]\n\n        let proteinsTotalFat = [\"5.73\", \"13.1\", \"9.3\", \"6.34\", \"19.94\"]\n        let fruitsTotalFat = [\"0.12\", \"0.33\", \"0.12\", \"0.16\", \"0.33\"]\n        let vegitablesTotalFat = [\"0.3\", \"0.22\", \"0.2\", \"0.4\", \"0.9\"]\n        let dairyTotalFat = [\"3.9\", \"5.0\", \"9.0\", \"0.2\", \"4.3\"]\n        let grainTotalFat = [\"1.1\", \"1.7\", \"1.7\", \"3.3\", \"0.5\"]\n\n        let proteinsSatFat = [\"2.183\", \"5.3\", \"2.5\", \"1.0\", \"2.884\"]\n        let fruitsSatFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n        let vegitablesSatFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n        let dairySatFat = [\"2.4\", \"0.0\", \"6.0\", \"0.1\", \"0.0\"]\n        let grainSatFat = [\"0.0\", \"0.1\", \"0.3\", \"0.1\", \"0.1\"]\n        \n        let proteinsTransFat = [\"0.182\", \"0.6\", \"0.1\", \"0.0\", \"0.0\"]\n        let fruitsTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n        let vegitablesTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n        let dairyTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n        let grainTransFat = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\"]\n\n        let proteinsProtein = [\"29.44\", \"15.18\", \"27.14\", \"19.84\", \"36.49\"]\n        let fruitsProtein = [\"0.94\", \"1.09\", \"0.54\", \"0.72\", \"0.74\"]\n        let vegitablesProtein = [\"1.2\", \"1.83\", \"1.2\", \"2.9\", \"4.3\"]\n        let dairyProtein = [\"3.2\", \"9.0\", \"7.0\", \"8.3\", \"11.12\"]\n        let grainProtein = [\"4.0\", \"13.8\", \"6.3\", \"2.7\", \"1.1\"]\n\n        let proteinsTotalCarb = [\"0.0\", \"0.0\", \"0.0\", \"0.0\", \"30.16\"]\n        let fruitsTotalCarb = [\"11.75\", \"22.84\", \"13.12\", \"18.1\", \"14.49\"]\n        let vegitablesTotalCarb = [\"3.3\", \"6.97\", \"3.4\", \"3.6\", \"8.8\"]\n        let dairyTotalCarb = [\"4.8\", \"3.98\", \"0.0\", \"12.5\", \"3.38\"]\n        let grainTotalCarb = [\"13.8\", \"68\", \"35.2\", \"16.9\", \"8.5\"]\n        \n        var name;\n        var cal;\n        var totalFat;\n        var satFat;\n        var transFat;\n        var protein;\n        var totalCarb;\n    \n        for(var i = 5; i >= 0; i--) {this.state.myRequestedRefs.menu.remove(i);}\n    \n        for(i = 0; i < this.state.data.length; i++) {\n            switch (foodtype) {\n                case 'Protein':\n                    if (this.state.data[i][2] == \"Protein\") {\n                        name = this.state.data[i][2]\n                        cal = this.state.data[i][2]\n                        totalFat = this.state.data[i][2]\n                        satFat = this.state.data[i][2]\n                        transFat = this.state.data[i][2];\n                        protein = this.state.data[i][2];\n                        totalCarb = this.state.data[i][2];\n                    }\n                    break;\n                case 'Fruits':\n                    name = fruits[1];\n                    cal = fruitsCalories[1];\n                    totalFat = fruitsTotalFat[1];\n                    satFat = fruitsSatFat[1];\n                    transFat = fruitsTransFat[1];\n                    protein = fruitsProtein[1];\n                    totalCarb = fruitsTotalCarb[1];\n                    break;\n                case 'Vegitables':\n                    name = vegitables[1];\n                    cal = vegitablesCalories[1];\n                    totalFat = vegitablesTotalFat[1];\n                    satFat = vegitablesSatFat[1];\n                    transFat = vegitablesTransFat[1];\n                    protein = vegitablesProtein[1];\n                    totalCarb = vegitablesTotalCarb[1];\n                    break;\n                case 'Dairy':\n                    name = dairy[1];\n                    cal = dairyCalories[1];\n                    totalFat = dairyTotalFat[1];\n                    satFat = dairySatFat[1];\n                    transFat = dairyTransFat[1];\n                    protein = dairyProtein[1];\n                    totalCarb = dairyTotalCarb[1];\n                    break;\n                case 'Grain':\n                    name = grain[1];\n                    cal = grainCalories[1];\n                    totalFat = grainTotalFat[1];\n                    satFat = grainSatFat[1];\n                    transFat = grainTransFat[1];\n                    protein = grainProtein[1];\n                    totalCarb = grainTotalCarb[1];\n                    break;\n                default:\n                    break;\n            }\n            var el = document.createElement(\"option\");\n            el.textContent = name;\n            el.value = cal;\n            el.totalFat = totalFat;\n            el.satFat = satFat;\n            el.transFat = transFat;\n            el.protein = protein;\n            el.totalCarb = totalCarb;\n\n            \n            this.state.myRequestedRefs.menu.append(el);   \n        }\n    }\n\n    getRefsFromMenu(childRefs) {\n        this.setState({\n            myRequestedRefs: childRefs\n        });\n    }\n\n    getRefsFromSelected(childRefs) {\n        this.setState({\n            selectedRefs: childRefs\n        });\n    }\n\n    addToSelected = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {return;}\n        this.setNutritional();\n        var values = this.state.myRequestedRefs.menu;\n        var select = this.state.selectedRefs.selected;\n        var el = document.createElement(\"option\");\n    \n        el.textContent = values.options[values.selectedIndex].text;\n        el.value = values.value;\n        select.append(el);\n\n        this.Selected.current.setState({\n            calories: (this.Selected.current.state.calories + parseInt(this.Menu.current.state.calories)),\n            totalFat: (this.Selected.current.state.totalFat + parseFloat(this.Menu.current.state.totalFat)),\n            satFat: (this.Selected.current.state.satFat + parseFloat(this.Menu.current.state.satFat)),\n            transFat: (this.Selected.current.state.transFat + parseFloat(this.Menu.current.state.transFat)),\n            protein: (this.Selected.current.state.protein + parseFloat(this.Menu.current.state.protein)),\n            carb: (this.Selected.current.state.carb + parseFloat(this.Menu.current.state.carb))\n        });\n    \n    }\n    \n    removeFromSelected = () => {\n        if (this.state.selectedRefs.selected.value === \"\") {\n            return;\n        }\n        var select = this.state.selectedRefs.selected;\n        var values = this.state.myRequestedRefs.menu;\n\n        this.Selected.current.setState({\n            calories: this.Selected.current.state.calories - parseInt(values.value),\n            totalFat: this.Selected.current.state.totalFat - parseFloat(values.options[values.selectedIndex].totalFat),\n            satFat: this.Selected.current.state.satFat - parseFloat(values.options[values.selectedIndex].satFat),\n            transFat: this.Selected.current.state.transFat - parseFloat(values.options[values.selectedIndex].transFat),\n            protein: this.Selected.current.state.protein - parseFloat(values.options[values.selectedIndex].protein),\n            carb: this.Selected.current.state.carb - parseFloat(values.options[values.selectedIndex].totalCarb)\n        });\n    \n        select.removeChild(select.options[select.selectedIndex]);\n    }\n    setNutritional = () => {\n        if (this.state.myRequestedRefs.menu.value === \"\") {\n            return;\n        }\n        var values = this.state.myRequestedRefs.menu;\n\n        this.Menu.current.setState({\n            calories: values.options[values.selectedIndex].value,\n            totalFat: values.options[values.selectedIndex].totalFat,\n            satFat: values.options[values.selectedIndex].satFat,\n            transFat: values.options[values.selectedIndex].transFat,\n            protein: values.options[values.selectedIndex].protein,\n            carb: values.options[values.selectedIndex].totalCarb\n        });\n    }\n\n\n    render() {\n        return (\n            <Row className=\"app\">\n                <MyComponent/>\n                <Categories ref={this.Categories} setList={this.setList}/>\n                <MenuItems ref={this.Menu} passRefUpward={this.getRefsFromMenu} setNutritional={this.setNutritional}/>\n                <AddButton ref=\"button\" addToSelected={this.addToSelected} removeFromSelected={this.removeFromSelected}/>\n                <SelectedItems ref={this.Selected} passRefUpward={this.getRefsFromSelected}/>\n            </Row>\n        );\n    }\n} \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}